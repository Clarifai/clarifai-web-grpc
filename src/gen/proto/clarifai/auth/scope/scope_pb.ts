// @generated by protoc-gen-es v0.1.0 with parameter "target=ts"
// @generated from file proto/clarifai/auth/scope/scope.proto (package clarifai.auth.scope, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * Next index: 41
 * NOTE: When updating the list of "clarifai_exposed" scopes, please also
 * update the TestScopes function in main_key_test.go and TestGetExposedScopes function in
 * scope_test.go
 * 
 * The dependencies listed for each scope are simply recommendations so that a user
 * cannot make a key that would be useless. Beyond the key creation they are not enforced
 * but rather the scopes are enforce when data is accessed.
 * 
 * 
 * There is the following conventions in place, make sure you add them to the scopes for all new
 * resource types:
 * 
 * 1. *_Add requires the corresponding _Get.
 * 2. *_Delete requires the corresponding _Add and _Get.
 * 3. *_Patch is deprecated and not check anywhere.
 * 
 * Think of the dependencies in this file at the DB level. If you cannot make a DB call to Get, Add
 * or Delete a resource without having access to another resource then you should add it here. That
 * should for the most part be the same resource type. In service.proto for the API level you will
 * also specify cl_depending_scopes for each API endpoint. Those cover cases where an endpoint
 * might need to access more than just that one resource type in order to operate (ie. API handlers
 * that make multiple DB calls of various resource types likely have more cl_depending_scopes than
 * the ones listed below). For example: PostCollectors to create a collector we make sure that you
 * can do model predictions, get concepts, etc. so that you don't have a collector that would be
 * useless at the end of that API handler but below you can see that the dependencies of Collector
 * scopes are only on other Collector scopes.
 * 
 *
 * @generated from enum clarifai.auth.scope.S
 */
export enum S {
  /**
   * introduce undef so that the zero (default/unset) value of the enum is not a real
   * permission.  undef is only present for this purpose and should not be used
   * to indicate any "real" value.
   *
   * @generated from enum value: undef = 0;
   */
  undef = 0,

  /**
   * @generated from enum value: All = 1;
   */
  All = 1,

  /**
   * Make an rpc to our prediction services.
   *
   * @generated from enum value: Predict = 2;
   */
  Predict = 2,

  /**
   * @generated from enum value: Predict_Feedback = 29 [deprecated = true];
   * @deprecated
   */
  Predict_Feedback = 29,

  /**
   * Write to the inputs table in the DB.
   *
   * @generated from enum value: Inputs_Add = 4;
   */
  Inputs_Add = 4,

  /**
   * Read from the inputs table in the DB.
   *
   * @generated from enum value: Inputs_Get = 5;
   */
  Inputs_Get = 5,

  /**
   * To patch we need read/write.
   * Deprecated.
   * Optionally needs Concepts_Add.
   *
   * @generated from enum value: Inputs_Patch = 7 [deprecated = true];
   * @deprecated
   */
  Inputs_Patch = 7,

  /**
   * To delete we need read/write
   *
   * @generated from enum value: Inputs_Delete = 8;
   */
  Inputs_Delete = 8,

  /**
   * Deprecated.
   *
   * @generated from enum value: Outputs_Patch = 9 [deprecated = true];
   * @deprecated
   */
  Outputs_Patch = 9,

  /**
   * Write to the concepts DB tables.
   *
   * @generated from enum value: Concepts_Add = 10;
   */
  Concepts_Add = 10,

  /**
   * Read from the concepts DB tables.
   *
   * @generated from enum value: Concepts_Get = 11;
   */
  Concepts_Get = 11,

  /**
   * To patch we need read/write.
   * Deprecated
   *
   * @generated from enum value: Concepts_Patch = 12 [deprecated = true];
   * @deprecated
   */
  Concepts_Patch = 12,

  /**
   * To delete we need read/write.
   * Note: not implemented.
   *
   * @generated from enum value: Concepts_Delete = 13;
   */
  Concepts_Delete = 13,

  /**
   * Write to the models DB tables.
   *
   * @generated from enum value: Models_Add = 14;
   */
  Models_Add = 14,

  /**
   * Read from the models and models versions DB tables.
   *
   * @generated from enum value: Models_Get = 15;
   */
  Models_Get = 15,

  /**
   * To patch we need read/write.
   * Deprecated.
   *
   * @generated from enum value: Models_Patch = 16 [deprecated = true];
   * @deprecated
   */
  Models_Patch = 16,

  /**
   * To delete we need read/write.
   *
   * @generated from enum value: Models_Delete = 17;
   */
  Models_Delete = 17,

  /**
   * Note: Models_Train is effectively doing POST /models/{models_id}/versions so it's treated that
   * way in terms of data access under the hood.
   * Write to the model versions DB table.
   *
   * @generated from enum value: Models_Train = 26;
   */
  Models_Train = 26,

  /**
   * Internal only model syncing.
   *
   * @generated from enum value: Models_Sync = 27;
   */
  Models_Sync = 27,

  /**
   * Write to the workflows DB table.
   *
   * @generated from enum value: Workflows_Add = 18;
   */
  Workflows_Add = 18,

  /**
   * Read from the workflows DB table.
   *
   * @generated from enum value: Workflows_Get = 19;
   */
  Workflows_Get = 19,

  /**
   * To patch we need read/write.
   * Deprecated.
   *
   * @generated from enum value: Workflows_Patch = 20 [deprecated = true];
   * @deprecated
   */
  Workflows_Patch = 20,

  /**
   * To delete we need read/write.
   *
   * @generated from enum value: Workflows_Delete = 21;
   */
  Workflows_Delete = 21,

  /**
   * @generated from enum value: WorkflowMetrics_Get = 96;
   */
  WorkflowMetrics_Get = 96,

  /**
   * @generated from enum value: WorkflowMetrics_Add = 97;
   */
  WorkflowMetrics_Add = 97,

  /**
   * @generated from enum value: WorkflowMetrics_Delete = 98;
   */
  WorkflowMetrics_Delete = 98,

  /**
   * Write to the visualizations DB table.
   * Deprecated
   *
   * @generated from enum value: TSNEVisualizations_Add = 24 [deprecated = true];
   * @deprecated
   */
  TSNEVisualizations_Add = 24,

  /**
   * Read from the visualizations DB table.
   * Deprecated
   *
   * @generated from enum value: TSNEVisualizations_Get = 25 [deprecated = true];
   * @deprecated
   */
  TSNEVisualizations_Get = 25,

  /**
   * Write to the annotations DB table.
   *
   * @generated from enum value: Annotations_Add = 37;
   */
  Annotations_Add = 37,

  /**
   * Read from the annotations DB table.
   *
   * @generated from enum value: Annotations_Get = 38;
   */
  Annotations_Get = 38,

  /**
   * To patch we need read/write.
   * Deprecated.
   *
   * @generated from enum value: Annotations_Patch = 39 [deprecated = true];
   * @deprecated
   */
  Annotations_Patch = 39,

  /**
   * To delete we need read/write.
   *
   * @generated from enum value: Annotations_Delete = 40;
   */
  Annotations_Delete = 40,

  /**
   * Write to the collectors DB table.
   *
   * @generated from enum value: Collectors_Add = 41;
   */
  Collectors_Add = 41,

  /**
   * Read from the collectors DB table.
   *
   * @generated from enum value: Collectors_Get = 42;
   */
  Collectors_Get = 42,

  /**
   * To delete we need read/write.
   *
   * @generated from enum value: Collectors_Delete = 43;
   */
  Collectors_Delete = 43,

  /**
   * Write to the apps DB table.
   *
   * @generated from enum value: Apps_Add = 44;
   */
  Apps_Add = 44,

  /**
   * Read from the apps DB table.
   *
   * @generated from enum value: Apps_Get = 45;
   */
  Apps_Get = 45,

  /**
   * To delete we need read/write.
   *
   * @generated from enum value: Apps_Delete = 46;
   */
  Apps_Delete = 46,

  /**
   * Write to the keys DB table.
   *
   * @generated from enum value: Keys_Add = 47;
   */
  Keys_Add = 47,

  /**
   * Read from the keys DB table.
   *
   * @generated from enum value: Keys_Get = 48;
   */
  Keys_Get = 48,

  /**
   * To delete we need read/write.
   *
   * @generated from enum value: Keys_Delete = 49;
   */
  Keys_Delete = 49,

  /**
   * Write to the app sharing DB table
   *
   * @generated from enum value: Collaborators_Add = 51;
   */
  Collaborators_Add = 51,

  /**
   * Read from the app sharing DB table
   *
   * @generated from enum value: Collaborators_Get = 50;
   */
  Collaborators_Get = 50,

  /**
   * To delete we need read/write
   *
   * @generated from enum value: Collaborators_Delete = 52;
   */
  Collaborators_Delete = 52,

  /**
   * Write to the metrics table
   *
   * @generated from enum value: Metrics_Add = 54;
   */
  Metrics_Add = 54,

  /**
   * Read from metrics table
   *
   * @generated from enum value: Metrics_Get = 53;
   */
  Metrics_Get = 53,

  /**
   * To delete we need read/write
   *
   * @generated from enum value: Metrics_Delete = 63;
   */
  Metrics_Delete = 63,

  /**
   * Write to tasks DB table.
   *
   * @generated from enum value: Tasks_Add = 55;
   */
  Tasks_Add = 55,

  /**
   * Read from the tasks DB table.
   *
   * @generated from enum value: Tasks_Get = 56;
   */
  Tasks_Get = 56,

  /**
   * To delete we need read/write
   *
   * @generated from enum value: Tasks_Delete = 70;
   */
  Tasks_Delete = 70,

  /**
   * Write to the password_policies DB table
   *
   * @generated from enum value: PasswordPolicies_Add = 57;
   */
  PasswordPolicies_Add = 57,

  /**
   * Read from the password_policies DB table
   *
   * @generated from enum value: PasswordPolicies_Get = 58;
   */
  PasswordPolicies_Get = 58,

  /**
   * To delete password_policies we need read/write
   *
   * @generated from enum value: PasswordPolicies_Delete = 59;
   */
  PasswordPolicies_Delete = 59,

  /**
   * Write to password_history table
   *
   * @generated from enum value: PasswordHistory_Add = 60;
   */
  PasswordHistory_Add = 60,

  /**
   * Read from password_history table
   *
   * @generated from enum value: PasswordHistory_Get = 61;
   */
  PasswordHistory_Get = 61,

  /**
   * To delete password history we need read/write
   *
   * @generated from enum value: PasswordHistory_Delete = 62;
   */
  PasswordHistory_Delete = 62,

  /**
   * Read from notifications table
   *
   * @generated from enum value: Notifications_Get = 64;
   */
  Notifications_Get = 64,

  /**
   * Write to notifications table
   *
   * @generated from enum value: Notifications_Add = 65;
   */
  Notifications_Add = 65,

  /**
   * To delete notifications we need read/write
   *
   * @generated from enum value: Notifications_Delete = 66;
   */
  Notifications_Delete = 66,

  /**
   * Read from label orders table
   *
   * @generated from enum value: LabelOrders_Get = 67;
   */
  LabelOrders_Get = 67,

  /**
   * Write to label orders table
   *
   * @generated from enum value: LabelOrders_Add = 68;
   */
  LabelOrders_Add = 68,

  /**
   * To delete label orders we need read/write
   *
   * @generated from enum value: LabelOrders_Delete = 69;
   */
  LabelOrders_Delete = 69,

  /**
   * Read from user_feature_configs table
   *
   * @generated from enum value: UserFeatureConfigs_Get = 71;
   */
  UserFeatureConfigs_Get = 71,

  /**
   * Write to configs table
   *
   * @generated from enum value: UserFeatureConfigs_Add = 72;
   */
  UserFeatureConfigs_Add = 72,

  /**
   * To delete configs we need read/write
   *
   * @generated from enum value: UserFeatureConfigs_Delete = 73;
   */
  UserFeatureConfigs_Delete = 73,

  /**
   * Read from teams table
   *
   * @generated from enum value: Teams_Get = 74;
   */
  Teams_Get = 74,

  /**
   * Write to teams table
   *
   * @generated from enum value: Teams_Add = 75;
   */
  Teams_Add = 75,

  /**
   * To delete teams we need read/write
   *
   * @generated from enum value: Teams_Delete = 76;
   */
  Teams_Delete = 76,

  /**
   * Read from team_users table
   *
   * @generated from enum value: TeamUsers_Get = 77;
   */
  TeamUsers_Get = 77,

  /**
   * Write to team_users table
   *
   * @generated from enum value: TeamUsers_Add = 78;
   */
  TeamUsers_Add = 78,

  /**
   * To delete team_users we need read/write
   *
   * @generated from enum value: TeamUsers_Delete = 79;
   */
  TeamUsers_Delete = 79,

  /**
   * @generated from enum value: TeamApps_Get = 83;
   */
  TeamApps_Get = 83,

  /**
   * @generated from enum value: TeamApps_Add = 84;
   */
  TeamApps_Add = 84,

  /**
   * @generated from enum value: TeamApps_Delete = 85;
   */
  TeamApps_Delete = 85,

  /**
   * Read from roles table
   *
   * @generated from enum value: Roles_Get = 80;
   */
  Roles_Get = 80,

  /**
   * Read from organizations table
   *
   * @generated from enum value: Organizations_Get = 86;
   */
  Organizations_Get = 86,

  /**
   * Write to organizations table
   *
   * @generated from enum value: Organizations_Add = 87;
   */
  Organizations_Add = 87,

  /**
   * To delete organizations we need read/write
   *
   * @generated from enum value: Organizations_Delete = 88;
   */
  Organizations_Delete = 88,

  /**
   * Read from identity_providers table
   *
   * @generated from enum value: IdentityProviders_Get = 89;
   */
  IdentityProviders_Get = 89,

  /**
   * Write to identity_providers table
   *
   * @generated from enum value: IdentityProviders_Add = 90;
   */
  IdentityProviders_Add = 90,

  /**
   * To delete identity_providers we need read/write
   *
   * @generated from enum value: IdentityProviders_Delete = 91;
   */
  IdentityProviders_Delete = 91,

  /**
   * @generated from enum value: Org_ListAllApps = 92;
   */
  Org_ListAllApps = 92,

  /**
   * @generated from enum value: OrganizationMembers_Delete = 93;
   */
  OrganizationMembers_Delete = 93,

  /**
   * @generated from enum value: OrganizationMembers_Add = 94;
   */
  OrganizationMembers_Add = 94,

  /**
   * @generated from enum value: OrganizationMembers_List = 99;
   */
  OrganizationMembers_List = 99,

  /**
   * @generated from enum value: UserOrganizations_Get = 95;
   */
  UserOrganizations_Get = 95,

  /**
   * @generated from enum value: OrganizationInvitations_Add = 100;
   */
  OrganizationInvitations_Add = 100,

  /**
   * @generated from enum value: OrganizationInvitations_Get = 101;
   */
  OrganizationInvitations_Get = 101,

  /**
   * CRUD on FindDuplicateAnnotationsJobs table
   *
   * @generated from enum value: FindDuplicateAnnotationsJobs_Add = 102;
   */
  FindDuplicateAnnotationsJobs_Add = 102,

  /**
   * @generated from enum value: FindDuplicateAnnotationsJobs_Get = 103;
   */
  FindDuplicateAnnotationsJobs_Get = 103,

  /**
   * @generated from enum value: FindDuplicateAnnotationsJobs_Delete = 104;
   */
  FindDuplicateAnnotationsJobs_Delete = 104,

  /**
   * @generated from enum value: Datasets_Get = 105;
   */
  Datasets_Get = 105,

  /**
   * @generated from enum value: Datasets_Add = 106;
   */
  Datasets_Add = 106,

  /**
   * @generated from enum value: Datasets_Delete = 107;
   */
  Datasets_Delete = 107,

  /**
   * Write to the modules DB tables.
   *
   * @generated from enum value: Modules_Add = 108;
   */
  Modules_Add = 108,

  /**
   * Read from the modules and modules versions DB tables.
   *
   * @generated from enum value: Modules_Get = 109;
   */
  Modules_Get = 109,

  /**
   * To delete we need read/write.
   *
   * @generated from enum value: Modules_Delete = 110;
   */
  Modules_Delete = 110,

  /**
   * Write to the InstalledModuleVersions DB tables.
   *
   * @generated from enum value: InstalledModuleVersions_Add = 111;
   */
  InstalledModuleVersions_Add = 111,

  /**
   * Read from the InstalledModuleVersions and InstalledModuleVersions versions DB tables.
   *
   * @generated from enum value: InstalledModuleVersions_Get = 112;
   */
  InstalledModuleVersions_Get = 112,

  /**
   * To delete we need read/write.
   *
   * @generated from enum value: InstalledModuleVersions_Delete = 113;
   */
  InstalledModuleVersions_Delete = 113,

  /**
   * Make an rpc to our search services.
   *
   * @generated from enum value: Search = 3;
   */
  Search = 3,

  /**
   * @generated from enum value: Search_Feedback = 28 [deprecated = true];
   * @deprecated
   */
  Search_Feedback = 28,

  /**
   * To get a saved search.
   *
   * @generated from enum value: SavedSearch_Get = 114;
   */
  SavedSearch_Get = 114,

  /**
   * To add a saved search
   *
   * @generated from enum value: SavedSearch_Add = 115;
   */
  SavedSearch_Add = 115,

  /**
   * To delete a saved search
   *
   * @generated from enum value: SavedSearch_Delete = 116;
   */
  SavedSearch_Delete = 116,

  /**
   * @generated from enum value: ModelVersionPublications_Add = 117;
   */
  ModelVersionPublications_Add = 117,

  /**
   * @generated from enum value: ModelVersionPublications_Delete = 118;
   */
  ModelVersionPublications_Delete = 118,

  /**
   * @generated from enum value: WorkflowPublications_Add = 119;
   */
  WorkflowPublications_Add = 119,

  /**
   * @generated from enum value: WorkflowPublications_Delete = 120;
   */
  WorkflowPublications_Delete = 120,

  /**
   * To write bulk operations to the DB
   *
   * @generated from enum value: BulkOperation_Add = 121;
   */
  BulkOperation_Add = 121,

  /**
   * To Read Bulk Operations from the DB
   *
   * @generated from enum value: BulkOperation_Get = 122;
   */
  BulkOperation_Get = 122,

  /**
   * To Delete Bulk Operations from the DB
   *
   * @generated from enum value: BulkOperation_Delete = 123;
   */
  BulkOperation_Delete = 123,

  /**
   * To read historical usage from usage.dashboard_items table
   *
   * @generated from enum value: HistoricalUsage_Get = 124;
   */
  HistoricalUsage_Get = 124,

  /**
   * TODO(Hemanth): Expose scope after endpoints implementation
   * To write Ingest cloud inputs jobs to the DB
   *
   * @generated from enum value: InputsAddJobs_Add = 125;
   */
  InputsAddJobs_Add = 125,

  /**
   * To Read Ingest cloud inputs jobs to the DB
   *
   * [(clarfai_exposed) = true];
   *
   * @generated from enum value: InputsAddJobs_Get = 126;
   */
  InputsAddJobs_Get = 126,

  /**
   * To read uploaded files and archives info from Uploads endpoints
   *
   * @generated from enum value: Uploads_Get = 128;
   */
  Uploads_Get = 128,

  /**
   * To upload files or archives through the Uploads endpoints
   *
   * @generated from enum value: Uploads_Add = 129;
   */
  Uploads_Add = 129,

  /**
   * @generated from enum value: Uploads_Delete = 130;
   */
  Uploads_Delete = 130,
}
// Retrieve enum metadata with: proto3.getEnumType(S)
proto3.util.setEnumType(S, "clarifai.auth.scope.S", [
  { no: 0, name: "undef" },
  { no: 1, name: "All" },
  { no: 2, name: "Predict" },
  { no: 29, name: "Predict_Feedback" },
  { no: 4, name: "Inputs_Add" },
  { no: 5, name: "Inputs_Get" },
  { no: 7, name: "Inputs_Patch" },
  { no: 8, name: "Inputs_Delete" },
  { no: 9, name: "Outputs_Patch" },
  { no: 10, name: "Concepts_Add" },
  { no: 11, name: "Concepts_Get" },
  { no: 12, name: "Concepts_Patch" },
  { no: 13, name: "Concepts_Delete" },
  { no: 14, name: "Models_Add" },
  { no: 15, name: "Models_Get" },
  { no: 16, name: "Models_Patch" },
  { no: 17, name: "Models_Delete" },
  { no: 26, name: "Models_Train" },
  { no: 27, name: "Models_Sync" },
  { no: 18, name: "Workflows_Add" },
  { no: 19, name: "Workflows_Get" },
  { no: 20, name: "Workflows_Patch" },
  { no: 21, name: "Workflows_Delete" },
  { no: 96, name: "WorkflowMetrics_Get" },
  { no: 97, name: "WorkflowMetrics_Add" },
  { no: 98, name: "WorkflowMetrics_Delete" },
  { no: 24, name: "TSNEVisualizations_Add" },
  { no: 25, name: "TSNEVisualizations_Get" },
  { no: 37, name: "Annotations_Add" },
  { no: 38, name: "Annotations_Get" },
  { no: 39, name: "Annotations_Patch" },
  { no: 40, name: "Annotations_Delete" },
  { no: 41, name: "Collectors_Add" },
  { no: 42, name: "Collectors_Get" },
  { no: 43, name: "Collectors_Delete" },
  { no: 44, name: "Apps_Add" },
  { no: 45, name: "Apps_Get" },
  { no: 46, name: "Apps_Delete" },
  { no: 47, name: "Keys_Add" },
  { no: 48, name: "Keys_Get" },
  { no: 49, name: "Keys_Delete" },
  { no: 51, name: "Collaborators_Add" },
  { no: 50, name: "Collaborators_Get" },
  { no: 52, name: "Collaborators_Delete" },
  { no: 54, name: "Metrics_Add" },
  { no: 53, name: "Metrics_Get" },
  { no: 63, name: "Metrics_Delete" },
  { no: 55, name: "Tasks_Add" },
  { no: 56, name: "Tasks_Get" },
  { no: 70, name: "Tasks_Delete" },
  { no: 57, name: "PasswordPolicies_Add" },
  { no: 58, name: "PasswordPolicies_Get" },
  { no: 59, name: "PasswordPolicies_Delete" },
  { no: 60, name: "PasswordHistory_Add" },
  { no: 61, name: "PasswordHistory_Get" },
  { no: 62, name: "PasswordHistory_Delete" },
  { no: 64, name: "Notifications_Get" },
  { no: 65, name: "Notifications_Add" },
  { no: 66, name: "Notifications_Delete" },
  { no: 67, name: "LabelOrders_Get" },
  { no: 68, name: "LabelOrders_Add" },
  { no: 69, name: "LabelOrders_Delete" },
  { no: 71, name: "UserFeatureConfigs_Get" },
  { no: 72, name: "UserFeatureConfigs_Add" },
  { no: 73, name: "UserFeatureConfigs_Delete" },
  { no: 74, name: "Teams_Get" },
  { no: 75, name: "Teams_Add" },
  { no: 76, name: "Teams_Delete" },
  { no: 77, name: "TeamUsers_Get" },
  { no: 78, name: "TeamUsers_Add" },
  { no: 79, name: "TeamUsers_Delete" },
  { no: 83, name: "TeamApps_Get" },
  { no: 84, name: "TeamApps_Add" },
  { no: 85, name: "TeamApps_Delete" },
  { no: 80, name: "Roles_Get" },
  { no: 86, name: "Organizations_Get" },
  { no: 87, name: "Organizations_Add" },
  { no: 88, name: "Organizations_Delete" },
  { no: 89, name: "IdentityProviders_Get" },
  { no: 90, name: "IdentityProviders_Add" },
  { no: 91, name: "IdentityProviders_Delete" },
  { no: 92, name: "Org_ListAllApps" },
  { no: 93, name: "OrganizationMembers_Delete" },
  { no: 94, name: "OrganizationMembers_Add" },
  { no: 99, name: "OrganizationMembers_List" },
  { no: 95, name: "UserOrganizations_Get" },
  { no: 100, name: "OrganizationInvitations_Add" },
  { no: 101, name: "OrganizationInvitations_Get" },
  { no: 102, name: "FindDuplicateAnnotationsJobs_Add" },
  { no: 103, name: "FindDuplicateAnnotationsJobs_Get" },
  { no: 104, name: "FindDuplicateAnnotationsJobs_Delete" },
  { no: 105, name: "Datasets_Get" },
  { no: 106, name: "Datasets_Add" },
  { no: 107, name: "Datasets_Delete" },
  { no: 108, name: "Modules_Add" },
  { no: 109, name: "Modules_Get" },
  { no: 110, name: "Modules_Delete" },
  { no: 111, name: "InstalledModuleVersions_Add" },
  { no: 112, name: "InstalledModuleVersions_Get" },
  { no: 113, name: "InstalledModuleVersions_Delete" },
  { no: 3, name: "Search" },
  { no: 28, name: "Search_Feedback" },
  { no: 114, name: "SavedSearch_Get" },
  { no: 115, name: "SavedSearch_Add" },
  { no: 116, name: "SavedSearch_Delete" },
  { no: 117, name: "ModelVersionPublications_Add" },
  { no: 118, name: "ModelVersionPublications_Delete" },
  { no: 119, name: "WorkflowPublications_Add" },
  { no: 120, name: "WorkflowPublications_Delete" },
  { no: 121, name: "BulkOperation_Add" },
  { no: 122, name: "BulkOperation_Get" },
  { no: 123, name: "BulkOperation_Delete" },
  { no: 124, name: "HistoricalUsage_Get" },
  { no: 125, name: "InputsAddJobs_Add" },
  { no: 126, name: "InputsAddJobs_Get" },
  { no: 128, name: "Uploads_Get" },
  { no: 129, name: "Uploads_Add" },
  { no: 130, name: "Uploads_Delete" },
]);

/**
 * @generated from message clarifai.auth.scope.ScopeList
 */
export class ScopeList extends Message<ScopeList> {
  /**
   * These are the list of low-level scopes to check from the enum below.
   *
   * @generated from field: repeated clarifai.auth.scope.S scopes = 1;
   */
  scopes: S[] = [];

  /**
   * This is a list of fully qualified grpc names to check.
   *
   * @generated from field: repeated string endpoints = 2;
   */
  endpoints: string[] = [];

  constructor(data?: PartialMessage<ScopeList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "clarifai.auth.scope.ScopeList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "scopes", kind: "enum", T: proto3.getEnumType(S), repeated: true },
    { no: 2, name: "endpoints", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScopeList {
    return new ScopeList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScopeList {
    return new ScopeList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScopeList {
    return new ScopeList().fromJsonString(jsonString, options);
  }

  static equals(a: ScopeList | PlainMessage<ScopeList> | undefined, b: ScopeList | PlainMessage<ScopeList> | undefined): boolean {
    return proto3.util.equals(ScopeList, a, b);
  }
}

