/////////////////////////////////////////////// WARNING ///////////////////////////////////////////////
// Be aware that if you decide to add comments to this or any other non-private file, they could     //
// end up in our *public* auto-generated swagger documentation. In order to ensure that your         //
// comments are not included in our swagger docs, put one line of whitespace between your comment    //
// and any proto definitions.                                                                        //
///////////////////////////////////////////////////////////////////////////////////////////////////////

// @generated by protoc-gen-connect-web v0.1.0 with parameter "target=ts"
// @generated from file proto/clarifai/api/service.proto (package clarifai.api, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {CancelBulkOperationRequest, CancelInputsAddJobRequest, CompleteResetPasswordRequest, DeleteAnnotationFiltersRequest, DeleteAnnotationRequest, DeleteAnnotationSearchMetricsRequest, DeleteAnnotationsRequest, DeleteAppRequest, DeleteAppStarsRequest, DeleteAppStarsResponse, DeleteBulkOperationRequest, DeleteCollaboratorsRequest, DeleteCollectorsRequest, DeleteConceptRelationsRequest, DeleteCreditCardRequest, DeleteDatasetInputsRequest, DeleteDatasetsRequest, DeleteDatasetVersionsRequest, DeleteEmailRequest, DeleteFindDuplicateAnnotationsJobsRequest, DeleteIdentityProvidersRequest, DeleteInputRequest, DeleteInputsRequest, DeleteInstalledModuleVersionsRequest, DeleteKeyRequest, DeleteLabelOrdersRequest, DeleteModelReferencesRequest, DeleteModelRequest, DeleteModelsRequest, DeleteModelStarsRequest, DeleteModelStarsResponse, DeleteModelVersionInputExamplesRequest, DeleteModelVersionRequest, DeleteModulesRequest, DeleteModuleVersionsRequest, DeleteOrganizationMemberRequest, DeleteOrganizationRequest, DeletePasswordPoliciesRequest, DeleteRequestingUserFromOrganizationRequest, DeleteSearchRequest, DeleteTasksRequest, DeleteTeamAppsRequest, DeleteTeamsRequest, DeleteTeamUsersRequest, DeleteUploadsRequest, DeleteUserStarsRequest, DeleteUserStarsResponse, DeleteVocabConceptRequest, DeleteVocabConceptsRequest, DeleteVocabRequest, DeleteVocabsRequest, DeleteWebNotificationsRequest, DeleteWorkflowMetricsRequest, DeleteWorkflowRequest, DeleteWorkflowsRequest, DeleteWorkflowStarsRequest, DeleteWorkflowStarsResponse, DeleteWorkflowVersionsRequest, FetchLicenseRequest, FetchLicenseResponse, GetAnnotationFilterRequest, GetAnnotationRequest, GetAnnotationSearchMetricsRequest, GetAppDuplicationRequest, GetAppRequest, GetAuth2FATotpRecoverConfirmRequest, GetAuth2FATotpRecoverConfirmResponse, GetBillingUsageRequest, GetBillingUsageResponse, GetBulkOperationRequest, GetCollectorRequest, GetConceptCountsRequest, GetConceptLanguageRequest, GetConceptRequest, GetDatasetInputRequest, GetDatasetInputsSearchAddJobRequest, GetDatasetRequest, GetDatasetVersionRequest, GetFindDuplicateAnnotationsJobsRequest, GetHealthzRequest, GetHealthzResponse, GetHistoricalUsageRequest, GetHistoricalUsageResponse, GetIdentityProviderRequest, GetInputCountRequest, GetInputRequest, GetInputsAddJobRequest, GetInputSamplesRequest, GetInstalledModuleVersionRequest, GetKeyRequest, GetLabelOrderRequest, GetLicenseRequest, GetLoginInfoRequest, GetLoginInfoResponse, GetModelRequest, GetModelTypeRequest, GetModelVersionInputExampleRequest, GetModelVersionMetricsRequest, GetModelVersionRequest, GetModuleRequest, GetModuleVersionRequest, GetOrganizationInvitationPublicRequest, GetOrganizationInvitationRequest, GetOrganizationRequest, GetRealtimeUsageRequest, GetRealtimeUsageResponse, GetRoleRequest, GetSampledPredictMetricsRequest, GetSearchRequest, GetShippingAddressRequest, GetStatusCodeRequest, GetSubscriptionRequest, GetTaskCountRequest, GetTaskRequest, GetTeamRequest, GetUploadRequest, GetUserAccessRequest, GetUserRequest, GetVocabRequest, GetWebNotificationRequest, GetWorkflowMetricsRequest, GetWorkflowNodeMetricsRequest, GetWorkflowRequest, GetWorkflowVersionRequest, List2FAMethodsRequest, List2FAMethodsResponse, ListAnnotationFiltersRequest, ListAnnotationSearchMetricsRequest, ListAnnotationsForClusterRequest, ListAnnotationsRequest, ListAppDuplicationsRequest, ListAppKeysRequest, ListAppsRequest, ListAuthMethodsRequest, ListAuthMethodsResponse, ListBulkOperationsRequest, ListClustersRequest, ListCollaborationsRequest, ListCollaboratorsRequest, ListCollectorsRequest, ListConceptLanguagesRequest, ListConceptMappingsRequest, ListConceptReferencesRequest, ListConceptRelationsRequest, ListConceptsRequest, ListCreditCardsRequest, ListDatasetInputsRequest, ListDatasetsRequest, ListDatasetVersionMetricsGroupsRequest, ListDatasetVersionsRequest, ListEmailsRequest, ListFindDuplicateAnnotationsJobsRequest, ListGlobalPasswordPoliciesRequest, ListIdentityProvidersRequest, ListInputsAddJobsRequest, ListInputsRequest, ListInstalledModuleVersionsRequest, ListKeysRequest, ListKnowledgeGraphsRequest, ListLabelOrdersRequest, ListLicensesRequest, ListModelInputsRequest, ListModelReferencesRequest, ListModelsRequest, ListModelTypesRequest, ListModelVersionInputExamplesRequest, ListModelVersionsRequest, ListModulesRequest, ListModuleVersionsRequest, ListNextTaskAssignmentsRequest, ListOpenSourceLicensesRequest, ListOpenSourceLicensesResponse, ListOrganizationAppMembersRequest, ListOrganizationInvitationsRequest, ListOrganizationMembersRequest, ListOrganizationsRequest, ListPasswordPoliciesRequest, ListPlansRequest, ListPublicWorkflowsRequest, ListRolesRequest, ListScopesRequest, ListSearchesRequest, ListStatusCodesRequest, ListTagCategoriesRequest, ListTasksRequest, ListTeamAppsRequest, ListTeamsRequest, ListTeamUsersRequest, ListTrendingMetricsViewsRequest, ListUploadsRequest, ListUsageIntervalsRequest, ListUsageIntervalsResponse, ListUserBillingCyclesRequest, ListUserBillingCyclesResponse, ListUserCyclesRequest, ListUserCyclesResponse, ListUsersOrganizationsRequest, ListUsersRequest, ListVocabConceptsRequest, ListVocabsRequest, ListWebNotificationsRequest, ListWorkflowMetricsRequest, ListWorkflowsRequest, ListWorkflowVersionsRequest, MultiAnnotationFilterResponse, MultiAnnotationResponse, MultiAnnotationSearchMetricsResponse, MultiAppDuplicationsResponse, MultiAppResponse, MultiAppStarResponse, MultiBulkOperationsResponse, MultiClusterResponse, MultiCollaborationsResponse, MultiCollaboratorsResponse, MultiCollectorResponse, MultiConceptCountResponse, MultiConceptLanguageResponse, MultiConceptMappingJobResponse, MultiConceptMappingResponse, MultiConceptReferenceResponse, MultiConceptRelationResponse, MultiConceptResponse, MultiDatasetInputResponse, MultiDatasetResponse, MultiDatasetVersionExportResponse, MultiDatasetVersionMetricsGroupResponse, MultiDatasetVersionResponse, MultiFindDuplicateAnnotationsJobResponse, MultiIdentityProviderResponse, MultiIdValidationResponse, MultiInputAnnotationResponse, MultiInputResponse, MultiInputsAddJobsResponse, MultiInstalledModuleVersionResponse, MultiKeyResponse, MultiKnowledgeGraphResponse, MultiLabelOrderResponse, MultiModelCheckConsentResponse, MultiModelLanguageResponse, MultiModelReferenceResponse, MultiModelResponse, MultiModelStarResponse, MultiModelToolkitResponse, MultiModelTypeResponse, MultiModelUseCaseResponse, MultiModelVersionInputExampleResponse, MultiModelVersionResponse, MultiModuleResponse, MultiModuleVersionResponse, MultiOrganizationInvitationResponse, MultiOrganizationMemberResponse, MultiOrganizationResponse, MultiOutputResponse, MultiPlanResponse, MultipleCreditCardResponse, MultipleEmailResponse, MultipleLicensesResponse, MultiplePasswordPoliciesResponse, MultiRoleResponse, MultiSampledPredictMetricsResponse, MultiScopeDepsResponse, MultiScopeResponse, MultiScopeRootResponse, MultiScopeUserResponse, MultiSearchResponse, MultiStatusCodeResponse, MultiStatValueAggregateResponse, MultiStatValueResponse, MultiTagCategoryResponse, MultiTaskResponse, MultiTeamAppsResponse, MultiTeamResponse, MultiTeamUserResponse, MultiTrendingMetricsViewResponse, MultiUploadResponse, MultiUserAccessResponse, MultiUserResponse, MultiUsersOrganizationsResponse, MultiUserStarResponse, MultiVocabResponse, MultiWaitlistEmailResponse, MultiWebNotificationResponse, MultiWorkflowMetricsResponse, MultiWorkflowResponse, MultiWorkflowStarResponse, MultiWorkflowVersionResponse, MyScopesRequest, MyScopesRootRequest, MyScopesUserRequest, PatchAnnotationCountsRollupRequest, PatchAnnotationFiltersRequest, PatchAnnotationsRequest, PatchAnnotationsSearchesRequest, PatchAnnotationsStatusRequest, PatchAnnotationsStatusResponse, PatchAppRequest, PatchAppsIdsRequest, PatchAppsRequest, PatchCollaboratorsRequest, PatchCollectorsRequest, PatchConceptLanguagesRequest, PatchConceptsRequest, PatchCreditCardsRequest, PatchDatasetsRequest, PatchDatasetVersionsRequest, PatchIdentityProvidersRequest, PatchInputsRequest, PatchInputsSearchesRequest, PatchKeysRequest, PatchLabelOrdersRequest, PatchModelCheckConsentsRequest, PatchModelIdsRequest, PatchModelLanguagesRequest, PatchModelsRequest, PatchModelToolkitsRequest, PatchModelUseCasesRequest, PatchModelVersionsRequest, PatchModulesRequest, PatchOrganizationInvitationsRequest, PatchOrganizationMembersRequest, PatchOrganizationRequest, PatchPasswordPoliciesRequest, PatchSearchesRequest, PatchTasksRequest, PatchTeamsRequest, PatchUserRequest, PatchVocabsRequest, PatchWebNotificationsRequest, PatchWorkflowsRequest, PatchWorkflowVersionsRequest, PostAcceptOrganizationInvitationRequest, PostAnalyticsRequest, PostAnalyticsResponse, PostAnnotationFiltersRequest, PostAnnotationSearchMetricsRequest, PostAnnotationsRequest, PostAnnotationsSearchesRequest, PostAppDuplicationsRequest, PostAppsRequest, PostAppsSearchesRequest, PostAppStarsRequest, PostAttributeSearchRequest, PostAuth2FATotpDisableRequest, PostAuth2FATotpDisableResponse, PostAuth2FATotpLoginRequest, PostAuth2FATotpRecoverRequest, PostAuth2FATotpRecoverResponse, PostAuth2FATotpRegisterEnableRequest, PostAuth2FATotpRegisterEnableResponse, PostAuth2FATotpRegisterVerifyRequest, PostAuth2FATotpRegisterVerifyResponse, PostBulkOperationsRequest, PostClustersSearchesRequest, PostCollaboratorsRequest, PostCollectorsRequest, PostConceptLanguagesRequest, PostConceptMappingJobsRequest, PostConceptMappingsRequest, PostConceptRelationsRequest, PostConceptsRequest, PostConceptsSearchesRequest, PostCreditCardRequest, PostDatasetInputsRequest, PostDatasetsRequest, PostDatasetVersionsRequest, PostDeclineOrganizationInvitationRequest, PostEmailsRequest, PostFindDuplicateAnnotationsJobsRequest, PostHistoricalUsageRequest, PostHistoricalUsageResponse, PostIdentityProvidersRequest, PostIdLoginFinalizerRequest, PostIdLoginFinalizerResponse, PostIdValidationRequest, PostInputsAddJobsRequest, PostInputsDocumentRequest, PostInputsFileRequest, PostInputsNiFiRequest, PostInputsRequest, PostInputsSearchesRequest, PostInstalledModuleVersionsKeyRequest, PostInstalledModuleVersionsRequest, PostKeysRequest, PostKnowledgeGraphsRequest, PostLabelOrdersRequest, PostLinkIdpUserRequest, PostLinkIdpUserResponse, PostLoginRequest, PostLogoutRequest, PostModelOutputsRequest, PostModelReferencesRequest, PostModelsRequest, PostModelsSearchesRequest, PostModelStarsRequest, PostModelVersionInputExamplesRequest, PostModelVersionMetricsRequest, PostModelVersionsPublishRequest, PostModelVersionsRequest, PostModelVersionsUnPublishRequest, PostModulesRequest, PostModuleVersionsRequest, PostOrganizationInvitationsRequest, PostOrganizationMemberRequest, PostOrganizationsRequest, PostPasswordPoliciesRequest, PostPrimaryEmailRequest, PostResendVerifyRequest, PostSDKBillingRequest, PostSDKBillingResponse, PostSearchesByIDRequest, PostSearchesRequest, PostSignupRequest, PostStatValuesAggregateRequest, PostStatValuesRequest, PostSubscriptionRequest, PostTasksRequest, PostTeamAppsRequest, PostTeamsRequest, PostTeamUsersRequest, PostTrendingMetricsViewRequest, PostUploadsRequest, PostUsageRequest, PostUsageResponse, PostUserAccessRequest, PostUserConsentRequest, PostUserStarsRequest, PostValidatePasswordRequest, PostVerifyEmailRequest, PostVocabConceptsRequest, PostVocabsRequest, PostWaitlistEmailsRequest, PostWorkflowMetricsRequest, PostWorkflowResultsRequest, PostWorkflowResultsResponse, PostWorkflowResultsSimilarityRequest, PostWorkflowResultsSimilarityResponse, PostWorkflowsRequest, PostWorkflowStarsRequest, PostWorkflowVersionsPublishRequest, PostWorkflowVersionsUnPublishRequest, PutDatasetVersionExportsRequest, PutShippingAddressRequest, PutTaskAssignmentsRequest, PutUploadContentPartsRequest, RequestResetPasswordRequest, SingleAnnotationFilterResponse, SingleAnnotationResponse, SingleAppDuplicationResponse, SingleAppResponse, SingleBulkOperationsResponse, SingleCollectorResponse, SingleConceptLanguageResponse, SingleConceptResponse, SingleCreditCardResponse, SingleDatasetInputResponse, SingleDatasetInputsSearchAddJobResponse, SingleDatasetResponse, SingleDatasetVersionResponse, SingleEmailResponse, SingleIdentityProviderResponse, SingleInputCountResponse, SingleInputResponse, SingleInputsAddJobResponse, SingleInstalledModuleVersionResponse, SingleKeyResponse, SingleLabelOrderResponse, SingleLicenseResponse, SingleLoginResponse, SingleLogoutResponse, SingleModelResponse, SingleModelTypeResponse, SingleModelVersionInputExampleResponse, SingleModelVersionResponse, SingleModuleResponse, SingleModuleVersionResponse, SingleOrganizationInvitationResponse, SingleOrganizationResponse, SinglePasswordValidationResponse, SingleResendVerifyResponse, SingleRoleResponse, SingleSearchResponse, SingleShippingAddressResponse, SingleStatusCodeResponse, SingleSubscriptionResponse, SingleTaskCountResponse, SingleTaskResponse, SingleTeamResponse, SingleUploadResponse, SingleUserAccessResponse, SingleUserFeatureConfigResponse, SingleUserResponse, SingleVerifyEmailResponse, SingleVocabResponse, SingleWebNotificationResponse, SingleWorkflowMetricsResponse, SingleWorkflowNodeMetricsResponse, SingleWorkflowResponse, SingleWorkflowVersionResponse, StreamInputsRequest, TestMessage, UserFeatureConfigRequest, ValidateLicenseRequest, ValidateLicenseResponse} from "./service_pb.js";
import {MethodKind} from "@bufbuild/protobuf";
import {BaseResponse} from "./status/status_pb.js";

/**
 * V2
 *
 * @generated from service clarifai.api.V2
 */
export const V2 = {
  typeName: "clarifai.api.V2",
  methods: {
    /**
     * Common echo example.
     *
     * @generated from rpc clarifai.api.V2.Echo
     */
    echo: {
      name: "Echo",
      I: TestMessage,
      O: TestMessage,
      kind: MethodKind.Unary,
    },
    /**
     * List concept relations between concepts in the platform.
     * MUST be above ListConcepts so that if concept_id is empty this will still match
     * /concepts/relations to list all the concept relations in the app.
     *
     * @generated from rpc clarifai.api.V2.ListConceptRelations
     */
    listConceptRelations: {
      name: "ListConceptRelations",
      I: ListConceptRelationsRequest,
      O: MultiConceptRelationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Post concept relations to create relations between concepts in the platform.
     *
     * @generated from rpc clarifai.api.V2.PostConceptRelations
     */
    postConceptRelations: {
      name: "PostConceptRelations",
      I: PostConceptRelationsRequest,
      O: MultiConceptRelationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Post concept relations to create relations between concepts in the platform.
     *
     * @generated from rpc clarifai.api.V2.DeleteConceptRelations
     */
    deleteConceptRelations: {
      name: "DeleteConceptRelations",
      I: DeleteConceptRelationsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the concepts with their positive and negative counts
     *
     * @generated from rpc clarifai.api.V2.GetConceptCounts
     */
    getConceptCounts: {
      name: "GetConceptCounts",
      I: GetConceptCountsRequest,
      O: MultiConceptCountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific concept from an app.
     *
     * @generated from rpc clarifai.api.V2.GetConcept
     */
    getConcept: {
      name: "GetConcept",
      I: GetConceptRequest,
      O: SingleConceptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the concepts.
     *
     * @generated from rpc clarifai.api.V2.ListConcepts
     */
    listConcepts: {
      name: "ListConcepts",
      I: ListConceptsRequest,
      O: MultiConceptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search over the concepts to find one or more you're looking for.
     * This leverage the "body" parameter because we also have page and
     * per_page as url query param variables in this request.
     *
     * @generated from rpc clarifai.api.V2.PostConceptsSearches
     */
    postConceptsSearches: {
      name: "PostConceptsSearches",
      I: PostConceptsSearchesRequest,
      O: MultiConceptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a concept to an app.
     *
     * @generated from rpc clarifai.api.V2.PostConcepts
     */
    postConcepts: {
      name: "PostConcepts",
      I: PostConceptsRequest,
      O: MultiConceptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more concepts.
     *
     * @generated from rpc clarifai.api.V2.PatchConcepts
     */
    patchConcepts: {
      name: "PatchConcepts",
      I: PatchConceptsRequest,
      O: MultiConceptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific vocab from an app.
     *
     * @generated from rpc clarifai.api.V2.GetVocab
     */
    getVocab: {
      name: "GetVocab",
      I: GetVocabRequest,
      O: SingleVocabResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the vocabs.
     *
     * @generated from rpc clarifai.api.V2.ListVocabs
     */
    listVocabs: {
      name: "ListVocabs",
      I: ListVocabsRequest,
      O: MultiVocabResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a vocab to an app.
     *
     * @generated from rpc clarifai.api.V2.PostVocabs
     */
    postVocabs: {
      name: "PostVocabs",
      I: PostVocabsRequest,
      O: MultiVocabResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more vocabs.
     *
     * @generated from rpc clarifai.api.V2.PatchVocabs
     */
    patchVocabs: {
      name: "PatchVocabs",
      I: PatchVocabsRequest,
      O: MultiVocabResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a single vocab.
     *
     * @generated from rpc clarifai.api.V2.DeleteVocab
     */
    deleteVocab: {
      name: "DeleteVocab",
      I: DeleteVocabRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete multiple vocabs in one request.
     *
     * @generated from rpc clarifai.api.V2.DeleteVocabs
     */
    deleteVocabs: {
      name: "DeleteVocabs",
      I: DeleteVocabsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the vocabs.
     *
     * @generated from rpc clarifai.api.V2.ListVocabConcepts
     */
    listVocabConcepts: {
      name: "ListVocabConcepts",
      I: ListVocabConceptsRequest,
      O: MultiConceptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a vocab to an app.
     *
     * @generated from rpc clarifai.api.V2.PostVocabConcepts
     */
    postVocabConcepts: {
      name: "PostVocabConcepts",
      I: PostVocabConceptsRequest,
      O: MultiConceptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a single concept from a vocab.
     *
     * @generated from rpc clarifai.api.V2.DeleteVocabConcept
     */
    deleteVocabConcept: {
      name: "DeleteVocabConcept",
      I: DeleteVocabConceptRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete multiple concepts from a vocab in one request.
     *
     * @generated from rpc clarifai.api.V2.DeleteVocabConcepts
     */
    deleteVocabConcepts: {
      name: "DeleteVocabConcepts",
      I: DeleteVocabConceptsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific concept from an app.
     *
     * @generated from rpc clarifai.api.V2.GetConceptLanguage
     */
    getConceptLanguage: {
      name: "GetConceptLanguage",
      I: GetConceptLanguageRequest,
      O: SingleConceptLanguageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List the concept in all the translated languages.
     *
     * @generated from rpc clarifai.api.V2.ListConceptLanguages
     */
    listConceptLanguages: {
      name: "ListConceptLanguages",
      I: ListConceptLanguagesRequest,
      O: MultiConceptLanguageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a new translation for this concept.
     *
     * @generated from rpc clarifai.api.V2.PostConceptLanguages
     */
    postConceptLanguages: {
      name: "PostConceptLanguages",
      I: PostConceptLanguagesRequest,
      O: MultiConceptLanguageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch the name for a given language names by passing in a list of concepts with the new names
     * for the languages.
     *
     * @generated from rpc clarifai.api.V2.PatchConceptLanguages
     */
    patchConceptLanguages: {
      name: "PatchConceptLanguages",
      I: PatchConceptLanguagesRequest,
      O: MultiConceptLanguageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List the concept in all the outside sources where we found these concepts.
     *
     * @generated from rpc clarifai.api.V2.ListConceptReferences
     */
    listConceptReferences: {
      name: "ListConceptReferences",
      I: ListConceptReferencesRequest,
      O: MultiConceptReferenceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all domain graphs.
     *
     * @generated from rpc clarifai.api.V2.ListKnowledgeGraphs
     */
    listKnowledgeGraphs: {
      name: "ListKnowledgeGraphs",
      I: ListKnowledgeGraphsRequest,
      O: MultiKnowledgeGraphResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Post domain graphs.
     *
     * @generated from rpc clarifai.api.V2.PostKnowledgeGraphs
     */
    postKnowledgeGraphs: {
      name: "PostKnowledgeGraphs",
      I: PostKnowledgeGraphsRequest,
      O: MultiKnowledgeGraphResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Start concept mapping jobs.
     *
     * @generated from rpc clarifai.api.V2.PostConceptMappingJobs
     */
    postConceptMappingJobs: {
      name: "PostConceptMappingJobs",
      I: PostConceptMappingJobsRequest,
      O: MultiConceptMappingJobResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all concept mappings for a given concept id.
     *
     * @generated from rpc clarifai.api.V2.ListConceptMappings
     */
    listConceptMappings: {
      name: "ListConceptMappings",
      I: ListConceptMappingsRequest,
      O: MultiConceptMappingResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Post concept mappings.
     *
     * @generated from rpc clarifai.api.V2.PostConceptMappings
     */
    postConceptMappings: {
      name: "PostConceptMappings",
      I: PostConceptMappingsRequest,
      O: MultiConceptMappingResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific annotation from an app.
     *
     * @generated from rpc clarifai.api.V2.GetAnnotation
     */
    getAnnotation: {
      name: "GetAnnotation",
      I: GetAnnotationRequest,
      O: SingleAnnotationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the annotation.
     *
     * @generated from rpc clarifai.api.V2.ListAnnotations
     */
    listAnnotations: {
      name: "ListAnnotations",
      I: ListAnnotationsRequest,
      O: MultiAnnotationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Post annotations.
     *
     * @generated from rpc clarifai.api.V2.PostAnnotations
     */
    postAnnotations: {
      name: "PostAnnotations",
      I: PostAnnotationsRequest,
      O: MultiAnnotationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more annotations.
     *
     * @generated from rpc clarifai.api.V2.PatchAnnotations
     */
    patchAnnotations: {
      name: "PatchAnnotations",
      I: PatchAnnotationsRequest,
      O: MultiAnnotationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch annotations status by worker id and task id.
     *
     * @generated from rpc clarifai.api.V2.PatchAnnotationsStatus
     */
    patchAnnotationsStatus: {
      name: "PatchAnnotationsStatus",
      I: PatchAnnotationsStatusRequest,
      O: PatchAnnotationsStatusResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a single annotation.
     *
     * @generated from rpc clarifai.api.V2.DeleteAnnotation
     */
    deleteAnnotation: {
      name: "DeleteAnnotation",
      I: DeleteAnnotationRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete multiple annotations in one request.
     *
     * @generated from rpc clarifai.api.V2.DeleteAnnotations
     */
    deleteAnnotations: {
      name: "DeleteAnnotations",
      I: DeleteAnnotationsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch saved annotations searches by ids.
     *
     * @generated from rpc clarifai.api.V2.PatchAnnotationsSearches
     */
    patchAnnotationsSearches: {
      name: "PatchAnnotationsSearches",
      I: PatchAnnotationsSearchesRequest,
      O: MultiSearchResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Execute a search over annotations
     *
     * @generated from rpc clarifai.api.V2.PostAnnotationsSearches
     */
    postAnnotationsSearches: {
      name: "PostAnnotationsSearches",
      I: PostAnnotationsSearchesRequest,
      O: MultiSearchResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get input count per status.
     *
     * @generated from rpc clarifai.api.V2.GetInputCount
     */
    getInputCount: {
      name: "GetInputCount",
      I: GetInputCountRequest,
      O: SingleInputCountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Streams all the inputs starting from oldest assets.
     *
     * @generated from rpc clarifai.api.V2.StreamInputs
     */
    streamInputs: {
      name: "StreamInputs",
      I: StreamInputsRequest,
      O: MultiInputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific input from an app.
     *
     * @generated from rpc clarifai.api.V2.GetInputSamples
     */
    getInputSamples: {
      name: "GetInputSamples",
      I: GetInputSamplesRequest,
      O: MultiInputAnnotationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific input from an app.
     *
     * @generated from rpc clarifai.api.V2.GetInput
     */
    getInput: {
      name: "GetInput",
      I: GetInputRequest,
      O: SingleInputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the inputs.
     *
     * @generated from rpc clarifai.api.V2.ListInputs
     */
    listInputs: {
      name: "ListInputs",
      I: ListInputsRequest,
      O: MultiInputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an input (or set of inputs) to an app.
     * This call is synchronous if the PostInputsRequest contains exactly one image input. Otherwise,
     * it is asynchronous.
     *
     * @generated from rpc clarifai.api.V2.PostInputs
     */
    postInputs: {
      name: "PostInputs",
      I: PostInputsRequest,
      O: MultiInputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an input (or set of inputs) to an app via a file.
     * This is asynchronous.
     *
     * @generated from rpc clarifai.api.V2.PostInputsFile
     */
    postInputsFile: {
      name: "PostInputsFile",
      I: PostInputsFileRequest,
      O: MultiInputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an input or set of inputs to an app designed for NiFi integration.
     *
     * @generated from rpc clarifai.api.V2.PostInputsNiFi
     */
    postInputsNiFi: {
      name: "PostInputsNiFi",
      I: PostInputsNiFiRequest,
      O: MultiInputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an input or set of inputs to an app designed for Document integration.
     *
     * @generated from rpc clarifai.api.V2.PostInputsDocument
     */
    postInputsDocument: {
      name: "PostInputsDocument",
      I: PostInputsDocumentRequest,
      O: MultiInputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more inputs.
     *
     * @generated from rpc clarifai.api.V2.PatchInputs
     */
    patchInputs: {
      name: "PatchInputs",
      I: PatchInputsRequest,
      O: MultiInputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a single input asynchronously.
     *
     * @generated from rpc clarifai.api.V2.DeleteInput
     */
    deleteInput: {
      name: "DeleteInput",
      I: DeleteInputRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete multiple inputs in one request.
     * This call is asynchronous.
     *
     * @generated from rpc clarifai.api.V2.DeleteInputs
     */
    deleteInputs: {
      name: "DeleteInputs",
      I: DeleteInputsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch saved inputs searches by ids.
     *
     * @generated from rpc clarifai.api.V2.PatchInputsSearches
     */
    patchInputsSearches: {
      name: "PatchInputsSearches",
      I: PatchInputsSearchesRequest,
      O: MultiSearchResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Execute a search over inputs
     *
     * @generated from rpc clarifai.api.V2.PostInputsSearches
     */
    postInputsSearches: {
      name: "PostInputsSearches",
      I: PostInputsSearchesRequest,
      O: MultiSearchResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get predicted outputs from the model.
     *
     * @generated from rpc clarifai.api.V2.PostModelOutputs
     */
    postModelOutputs: {
      name: "PostModelOutputs",
      I: PostModelOutputsRequest,
      O: MultiOutputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the datasets.
     *
     * @generated from rpc clarifai.api.V2.ListDatasets
     */
    listDatasets: {
      name: "ListDatasets",
      I: ListDatasetsRequest,
      O: MultiDatasetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific dataset.
     *
     * @generated from rpc clarifai.api.V2.GetDataset
     */
    getDataset: {
      name: "GetDataset",
      I: GetDatasetRequest,
      O: SingleDatasetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add datasets to an app.
     * The process is atomic, i.e. either all or no datasets are added.
     * If there is an error for one dataset,
     * the process will stop, revert the transaction and return the error.
     *
     * @generated from rpc clarifai.api.V2.PostDatasets
     */
    postDatasets: {
      name: "PostDatasets",
      I: PostDatasetsRequest,
      O: MultiDatasetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more datasets.
     * The process is atomic, i.e. either all or no datasets are patched.
     * If there is an error for one dataset,
     * the process will stop, revert the transaction and return the error.
     *
     * @generated from rpc clarifai.api.V2.PatchDatasets
     */
    patchDatasets: {
      name: "PatchDatasets",
      I: PatchDatasetsRequest,
      O: MultiDatasetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete one or more datasets in a single request.
     *
     * @generated from rpc clarifai.api.V2.DeleteDatasets
     */
    deleteDatasets: {
      name: "DeleteDatasets",
      I: DeleteDatasetsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the dataset inputs in a dataset.
     *
     * @generated from rpc clarifai.api.V2.ListDatasetInputs
     */
    listDatasetInputs: {
      name: "ListDatasetInputs",
      I: ListDatasetInputsRequest,
      O: MultiDatasetInputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific dataset input.
     *
     * @generated from rpc clarifai.api.V2.GetDatasetInput
     */
    getDatasetInput: {
      name: "GetDatasetInput",
      I: GetDatasetInputRequest,
      O: SingleDatasetInputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add dataset inputs to a dataset.
     * The process is not atomic, i.e. if there are errors with some dataset
     * inputs, others might still be added. The response reports
     *   - SUCCESS if all dataset inputs were added,
     *   - MIXED_STATUS if only some dataset inputs were added, and
     *   - FAILURE if no dataset inputs were added.
     * Each individual dataset input in the response has the status set to
     * indicate if it was successful or if there was an error.
     *
     * @generated from rpc clarifai.api.V2.PostDatasetInputs
     */
    postDatasetInputs: {
      name: "PostDatasetInputs",
      I: PostDatasetInputsRequest,
      O: MultiDatasetInputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete one or more dataset inputs in a single request.
     *
     * @generated from rpc clarifai.api.V2.DeleteDatasetInputs
     */
    deleteDatasetInputs: {
      name: "DeleteDatasetInputs",
      I: DeleteDatasetInputsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the dataset versions.
     *
     * @generated from rpc clarifai.api.V2.ListDatasetVersions
     */
    listDatasetVersions: {
      name: "ListDatasetVersions",
      I: ListDatasetVersionsRequest,
      O: MultiDatasetVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific dataset version.
     *
     * @generated from rpc clarifai.api.V2.GetDatasetVersion
     */
    getDatasetVersion: {
      name: "GetDatasetVersion",
      I: GetDatasetVersionRequest,
      O: SingleDatasetVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc clarifai.api.V2.ListDatasetVersionMetricsGroups
     */
    listDatasetVersionMetricsGroups: {
      name: "ListDatasetVersionMetricsGroups",
      I: ListDatasetVersionMetricsGroupsRequest,
      O: MultiDatasetVersionMetricsGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add dataset versions to a dataset.
     *
     * @generated from rpc clarifai.api.V2.PostDatasetVersions
     */
    postDatasetVersions: {
      name: "PostDatasetVersions",
      I: PostDatasetVersionsRequest,
      O: MultiDatasetVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more dataset versions.
     *
     * @generated from rpc clarifai.api.V2.PatchDatasetVersions
     */
    patchDatasetVersions: {
      name: "PatchDatasetVersions",
      I: PatchDatasetVersionsRequest,
      O: MultiDatasetVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete one or more dataset versions in a single request.
     *
     * @generated from rpc clarifai.api.V2.DeleteDatasetVersions
     */
    deleteDatasetVersions: {
      name: "DeleteDatasetVersions",
      I: DeleteDatasetVersionsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create export of a dataset version.
     *
     * @generated from rpc clarifai.api.V2.PutDatasetVersionExports
     */
    putDatasetVersionExports: {
      name: "PutDatasetVersionExports",
      I: PutDatasetVersionExportsRequest,
      O: MultiDatasetVersionExportResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific model type.
     *
     * @generated from rpc clarifai.api.V2.GetModelType
     */
    getModelType: {
      name: "GetModelType",
      I: GetModelTypeRequest,
      O: SingleModelTypeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the supported open source licenses in the platform.
     *
     * @generated from rpc clarifai.api.V2.ListOpenSourceLicenses
     */
    listOpenSourceLicenses: {
      name: "ListOpenSourceLicenses",
      I: ListOpenSourceLicensesRequest,
      O: ListOpenSourceLicensesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the model types available in the platform.
     * This MUST be above ListModels so that the /models/types endpoint takes precedence.
     *
     * @generated from rpc clarifai.api.V2.ListModelTypes
     */
    listModelTypes: {
      name: "ListModelTypes",
      I: ListModelTypesRequest,
      O: MultiModelTypeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific model from an app.
     *
     * @generated from rpc clarifai.api.V2.GetModel
     */
    getModel: {
      name: "GetModel",
      I: GetModelRequest,
      O: SingleModelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a the output info for a given model_id or model_id/version_id
     * combo.
     *
     * @generated from rpc clarifai.api.V2.GetModelOutputInfo
     */
    getModelOutputInfo: {
      name: "GetModelOutputInfo",
      I: GetModelRequest,
      O: SingleModelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the models.
     *
     * @generated from rpc clarifai.api.V2.ListModels
     */
    listModels: {
      name: "ListModels",
      I: ListModelsRequest,
      O: MultiModelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search over the models to find one or more you're looking for.
     * This leverage the "body" parameter because we also have page and
     * per_page as url query param variables in this request.
     *
     * @generated from rpc clarifai.api.V2.PostModelsSearches
     */
    postModelsSearches: {
      name: "PostModelsSearches",
      I: PostModelsSearchesRequest,
      O: MultiModelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a models to an app.
     *
     * @generated from rpc clarifai.api.V2.PostModels
     */
    postModels: {
      name: "PostModels",
      I: PostModelsRequest,
      O: SingleModelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more models.
     *
     * @generated from rpc clarifai.api.V2.PatchModels
     */
    patchModels: {
      name: "PatchModels",
      I: PatchModelsRequest,
      O: MultiModelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more models.
     *
     * @generated from rpc clarifai.api.V2.PatchModelIds
     */
    patchModelIds: {
      name: "PatchModelIds",
      I: PatchModelIdsRequest,
      O: MultiModelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a single model.
     *
     * @generated from rpc clarifai.api.V2.DeleteModel
     */
    deleteModel: {
      name: "DeleteModel",
      I: DeleteModelRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete multiple models in one request.
     *
     * @generated from rpc clarifai.api.V2.DeleteModels
     */
    deleteModels: {
      name: "DeleteModels",
      I: DeleteModelsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update model check consents
     *
     * @generated from rpc clarifai.api.V2.PatchModelCheckConsents
     */
    patchModelCheckConsents: {
      name: "PatchModelCheckConsents",
      I: PatchModelCheckConsentsRequest,
      O: MultiModelCheckConsentResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update model toolkits tags
     *
     * @generated from rpc clarifai.api.V2.PatchModelToolkits
     */
    patchModelToolkits: {
      name: "PatchModelToolkits",
      I: PatchModelToolkitsRequest,
      O: MultiModelToolkitResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update model use_cases tags
     *
     * @generated from rpc clarifai.api.V2.PatchModelUseCases
     */
    patchModelUseCases: {
      name: "PatchModelUseCases",
      I: PatchModelUseCasesRequest,
      O: MultiModelUseCaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update model languages tags
     *
     * @generated from rpc clarifai.api.V2.PatchModelLanguages
     */
    patchModelLanguages: {
      name: "PatchModelLanguages",
      I: PatchModelLanguagesRequest,
      O: MultiModelLanguageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the inputs.
     *
     * @generated from rpc clarifai.api.V2.ListModelInputs
     */
    listModelInputs: {
      name: "ListModelInputs",
      I: ListModelInputsRequest,
      O: MultiInputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific model from an app.
     *
     * @generated from rpc clarifai.api.V2.GetModelVersion
     */
    getModelVersion: {
      name: "GetModelVersion",
      I: GetModelVersionRequest,
      O: SingleModelVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the models.
     *
     * @generated from rpc clarifai.api.V2.ListModelVersions
     */
    listModelVersions: {
      name: "ListModelVersions",
      I: ListModelVersionsRequest,
      O: MultiModelVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc clarifai.api.V2.PostWorkflowVersionsUnPublish
     */
    postWorkflowVersionsUnPublish: {
      name: "PostWorkflowVersionsUnPublish",
      I: PostWorkflowVersionsUnPublishRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc clarifai.api.V2.PostWorkflowVersionsPublish
     */
    postWorkflowVersionsPublish: {
      name: "PostWorkflowVersionsPublish",
      I: PostWorkflowVersionsPublishRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PostModelVersionsPublish
     *
     * @generated from rpc clarifai.api.V2.PostModelVersionsPublish
     */
    postModelVersionsPublish: {
      name: "PostModelVersionsPublish",
      I: PostModelVersionsPublishRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PostModelVersionsUnPublish
     *
     * @generated from rpc clarifai.api.V2.PostModelVersionsUnPublish
     */
    postModelVersionsUnPublish: {
      name: "PostModelVersionsUnPublish",
      I: PostModelVersionsUnPublishRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create a new model version to trigger training of the model.
     *
     * @generated from rpc clarifai.api.V2.PostModelVersions
     */
    postModelVersions: {
      name: "PostModelVersions",
      I: PostModelVersionsRequest,
      O: SingleModelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PatchModelVersions
     *
     * @generated from rpc clarifai.api.V2.PatchModelVersions
     */
    patchModelVersions: {
      name: "PatchModelVersions",
      I: PatchModelVersionsRequest,
      O: MultiModelVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a single model.
     *
     * @generated from rpc clarifai.api.V2.DeleteModelVersion
     */
    deleteModelVersion: {
      name: "DeleteModelVersion",
      I: DeleteModelVersionRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get the evaluation metrics for a model version.
     *
     * @generated from rpc clarifai.api.V2.GetModelVersionMetrics
     */
    getModelVersionMetrics: {
      name: "GetModelVersionMetrics",
      I: GetModelVersionMetricsRequest,
      O: SingleModelVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Run the evaluation metrics for a model version.
     *
     * @generated from rpc clarifai.api.V2.PostModelVersionMetrics
     */
    postModelVersionMetrics: {
      name: "PostModelVersionMetrics",
      I: PostModelVersionMetricsRequest,
      O: SingleModelVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Lists model references tied to a particular model id.
     *
     * @generated from rpc clarifai.api.V2.ListModelReferences
     */
    listModelReferences: {
      name: "ListModelReferences",
      I: ListModelReferencesRequest,
      O: MultiModelReferenceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add new reference(s) to a particular model
     *
     * @generated from rpc clarifai.api.V2.PostModelReferences
     */
    postModelReferences: {
      name: "PostModelReferences",
      I: PostModelReferencesRequest,
      O: MultiModelReferenceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete model references tied to a model id by reference id.
     *
     * @generated from rpc clarifai.api.V2.DeleteModelReferences
     */
    deleteModelReferences: {
      name: "DeleteModelReferences",
      I: DeleteModelReferencesRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetModelVersionInputExample
     *
     * @generated from rpc clarifai.api.V2.GetModelVersionInputExample
     */
    getModelVersionInputExample: {
      name: "GetModelVersionInputExample",
      I: GetModelVersionInputExampleRequest,
      O: SingleModelVersionInputExampleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListModelVersionInputExamples
     *
     * @generated from rpc clarifai.api.V2.ListModelVersionInputExamples
     */
    listModelVersionInputExamples: {
      name: "ListModelVersionInputExamples",
      I: ListModelVersionInputExamplesRequest,
      O: MultiModelVersionInputExampleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PostModelVersionInputExamples
     *
     * @generated from rpc clarifai.api.V2.PostModelVersionInputExamples
     */
    postModelVersionInputExamples: {
      name: "PostModelVersionInputExamples",
      I: PostModelVersionInputExamplesRequest,
      O: MultiModelVersionInputExampleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteModelVersionInputExamples
     *
     * @generated from rpc clarifai.api.V2.DeleteModelVersionInputExamples
     */
    deleteModelVersionInputExamples: {
      name: "DeleteModelVersionInputExamples",
      I: DeleteModelVersionInputExamplesRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Star a model
     *
     * @generated from rpc clarifai.api.V2.PostModelStars
     */
    postModelStars: {
      name: "PostModelStars",
      I: PostModelStarsRequest,
      O: MultiModelStarResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Un-star a model
     *
     * @generated from rpc clarifai.api.V2.DeleteModelStars
     */
    deleteModelStars: {
      name: "DeleteModelStars",
      I: DeleteModelStarsRequest,
      O: DeleteModelStarsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Star a user
     *
     * @generated from rpc clarifai.api.V2.PostUserStars
     */
    postUserStars: {
      name: "PostUserStars",
      I: PostUserStarsRequest,
      O: MultiUserStarResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Un-star a user
     *
     * @generated from rpc clarifai.api.V2.DeleteUserStars
     */
    deleteUserStars: {
      name: "DeleteUserStars",
      I: DeleteUserStarsRequest,
      O: DeleteUserStarsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Star a workflow
     *
     * @generated from rpc clarifai.api.V2.PostWorkflowStars
     */
    postWorkflowStars: {
      name: "PostWorkflowStars",
      I: PostWorkflowStarsRequest,
      O: MultiWorkflowStarResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Un-star a workflow
     *
     * @generated from rpc clarifai.api.V2.DeleteWorkflowStars
     */
    deleteWorkflowStars: {
      name: "DeleteWorkflowStars",
      I: DeleteWorkflowStarsRequest,
      O: DeleteWorkflowStarsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Star an app
     *
     * @generated from rpc clarifai.api.V2.PostAppStars
     */
    postAppStars: {
      name: "PostAppStars",
      I: PostAppStarsRequest,
      O: MultiAppStarResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Un-star an app
     *
     * @generated from rpc clarifai.api.V2.DeleteAppStars
     */
    deleteAppStars: {
      name: "DeleteAppStars",
      I: DeleteAppStarsRequest,
      O: DeleteAppStarsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific workflow from an app.
     *
     * @generated from rpc clarifai.api.V2.GetWorkflow
     */
    getWorkflow: {
      name: "GetWorkflow",
      I: GetWorkflowRequest,
      O: SingleWorkflowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the workflows.
     *
     * @generated from rpc clarifai.api.V2.ListWorkflows
     */
    listWorkflows: {
      name: "ListWorkflows",
      I: ListWorkflowsRequest,
      O: MultiWorkflowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all public workflows.
     *
     * @generated from rpc clarifai.api.V2.ListPublicWorkflows
     */
    listPublicWorkflows: {
      name: "ListPublicWorkflows",
      I: ListPublicWorkflowsRequest,
      O: MultiWorkflowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a workflow to an app.
     *
     * @generated from rpc clarifai.api.V2.PostWorkflows
     */
    postWorkflows: {
      name: "PostWorkflows",
      I: PostWorkflowsRequest,
      O: MultiWorkflowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more workflows.
     *
     * @generated from rpc clarifai.api.V2.PatchWorkflows
     */
    patchWorkflows: {
      name: "PatchWorkflows",
      I: PatchWorkflowsRequest,
      O: MultiWorkflowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a single workflow.
     *
     * @generated from rpc clarifai.api.V2.DeleteWorkflow
     */
    deleteWorkflow: {
      name: "DeleteWorkflow",
      I: DeleteWorkflowRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete multiple workflows in one request.
     *
     * @generated from rpc clarifai.api.V2.DeleteWorkflows
     */
    deleteWorkflows: {
      name: "DeleteWorkflows",
      I: DeleteWorkflowsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Predict using a workflow.
     *
     * @generated from rpc clarifai.api.V2.PostWorkflowResults
     */
    postWorkflowResults: {
      name: "PostWorkflowResults",
      I: PostWorkflowResultsRequest,
      O: PostWorkflowResultsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Compare embeddings distances using a workflow
     *
     * @generated from rpc clarifai.api.V2.PostWorkflowResultsSimilarity
     */
    postWorkflowResultsSimilarity: {
      name: "PostWorkflowResultsSimilarity",
      I: PostWorkflowResultsSimilarityRequest,
      O: PostWorkflowResultsSimilarityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List workflow versions.
     *
     * @generated from rpc clarifai.api.V2.ListWorkflowVersions
     */
    listWorkflowVersions: {
      name: "ListWorkflowVersions",
      I: ListWorkflowVersionsRequest,
      O: MultiWorkflowVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get single workflow version.
     *
     * @generated from rpc clarifai.api.V2.GetWorkflowVersion
     */
    getWorkflowVersion: {
      name: "GetWorkflowVersion",
      I: GetWorkflowVersionRequest,
      O: SingleWorkflowVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete workflow versions.
     *
     * @generated from rpc clarifai.api.V2.DeleteWorkflowVersions
     */
    deleteWorkflowVersions: {
      name: "DeleteWorkflowVersions",
      I: DeleteWorkflowVersionsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch workflow versions.
     *
     * @generated from rpc clarifai.api.V2.PatchWorkflowVersions
     */
    patchWorkflowVersions: {
      name: "PatchWorkflowVersions",
      I: PatchWorkflowVersionsRequest,
      O: MultiWorkflowVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Evaluate all the nodes in the workflow.
     *
     * @generated from rpc clarifai.api.V2.PostWorkflowMetrics
     */
    postWorkflowMetrics: {
      name: "PostWorkflowMetrics",
      I: PostWorkflowMetricsRequest,
      O: MultiWorkflowMetricsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get workflow evaluation data.
     *
     * @generated from rpc clarifai.api.V2.GetWorkflowMetrics
     */
    getWorkflowMetrics: {
      name: "GetWorkflowMetrics",
      I: GetWorkflowMetricsRequest,
      O: SingleWorkflowMetricsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetWorkflowNodeMetrics
     *
     * @generated from rpc clarifai.api.V2.GetWorkflowNodeMetrics
     */
    getWorkflowNodeMetrics: {
      name: "GetWorkflowNodeMetrics",
      I: GetWorkflowNodeMetricsRequest,
      O: SingleWorkflowNodeMetricsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListWorkflowMetrics
     *
     * @generated from rpc clarifai.api.V2.ListWorkflowMetrics
     */
    listWorkflowMetrics: {
      name: "ListWorkflowMetrics",
      I: ListWorkflowMetricsRequest,
      O: MultiWorkflowMetricsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete one or more workflow metrics.
     *
     * @generated from rpc clarifai.api.V2.DeleteWorkflowMetrics
     */
    deleteWorkflowMetrics: {
      name: "DeleteWorkflowMetrics",
      I: DeleteWorkflowMetricsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific key from an app.
     *
     * @generated from rpc clarifai.api.V2.GetKey
     */
    getKey: {
      name: "GetKey",
      I: GetKeyRequest,
      O: SingleKeyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the keys.
     *
     * @generated from rpc clarifai.api.V2.ListKeys
     */
    listKeys: {
      name: "ListKeys",
      I: ListKeysRequest,
      O: MultiKeyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List keys by app_id
     *
     * @generated from rpc clarifai.api.V2.ListAppKeys
     */
    listAppKeys: {
      name: "ListAppKeys",
      I: ListAppKeysRequest,
      O: MultiKeyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search over the keys to find one or more you're looking for.
     * This leverage the "body" parameter because we also have page and
     * per_page as url query param variables in this request.
     *
     * @generated from rpc clarifai.api.V2.DeleteKey
     */
    deleteKey: {
      name: "DeleteKey",
      I: DeleteKeyRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a key to an app.
     *
     * @generated from rpc clarifai.api.V2.PostKeys
     */
    postKeys: {
      name: "PostKeys",
      I: PostKeysRequest,
      O: MultiKeyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more keys.
     *
     * @generated from rpc clarifai.api.V2.PatchKeys
     */
    patchKeys: {
      name: "PatchKeys",
      I: PatchKeysRequest,
      O: MultiKeyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * API Keys in the public API -- request is itself Key authorized, and will tell
     * the user the scopes/access of the key/credential they're providing, as computed by
     * our authorizer:
     *
     * @generated from rpc clarifai.api.V2.MyScopes
     */
    myScopes: {
      name: "MyScopes",
      I: MyScopesRequest,
      O: MultiScopeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc clarifai.api.V2.MyScopesUser
     */
    myScopesUser: {
      name: "MyScopesUser",
      I: MyScopesUserRequest,
      O: MultiScopeUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc clarifai.api.V2.MyScopesRoot
     */
    myScopesRoot: {
      name: "MyScopesRoot",
      I: MyScopesRootRequest,
      O: MultiScopeRootResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all auth scopes available to me as a user.
     *
     * @generated from rpc clarifai.api.V2.ListScopes
     */
    listScopes: {
      name: "ListScopes",
      I: ListScopesRequest,
      O: MultiScopeDepsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific app from an app.
     *
     * @generated from rpc clarifai.api.V2.GetApp
     */
    getApp: {
      name: "GetApp",
      I: GetAppRequest,
      O: SingleAppResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the apps.
     *
     * @generated from rpc clarifai.api.V2.ListApps
     */
    listApps: {
      name: "ListApps",
      I: ListAppsRequest,
      O: MultiAppResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search over the apps to find one or more you're looking for.
     * This leverage the "body" parameter because we also have page and
     * per_page as url query param variables in this request.
     *
     * @generated from rpc clarifai.api.V2.DeleteApp
     */
    deleteApp: {
      name: "DeleteApp",
      I: DeleteAppRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a app to an app.
     * This needs to load the default workflow to make a copy, validating all the models in it, and
     * then writing the new workflow back to this new app.
     *
     * @generated from rpc clarifai.api.V2.PostApps
     */
    postApps: {
      name: "PostApps",
      I: PostAppsRequest,
      O: MultiAppResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more apps.
     *
     * @generated from rpc clarifai.api.V2.PatchApps
     */
    patchApps: {
      name: "PatchApps",
      I: PatchAppsRequest,
      O: MultiAppResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch apps ids.
     *
     * @generated from rpc clarifai.api.V2.PatchAppsIds
     */
    patchAppsIds: {
      name: "PatchAppsIds",
      I: PatchAppsIdsRequest,
      O: MultiAppResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one app.
     *
     * @generated from rpc clarifai.api.V2.PatchApp
     */
    patchApp: {
      name: "PatchApp",
      I: PatchAppRequest,
      O: SingleAppResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search over the applications to find one or more you're looking for.
     *
     * @generated from rpc clarifai.api.V2.PostAppsSearches
     */
    postAppsSearches: {
      name: "PostAppsSearches",
      I: PostAppsSearchesRequest,
      O: MultiAppResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get current user information
     *
     * @generated from rpc clarifai.api.V2.GetUser
     */
    getUser: {
      name: "GetUser",
      I: GetUserRequest,
      O: SingleUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List users
     *
     * @generated from rpc clarifai.api.V2.ListUsers
     */
    listUsers: {
      name: "ListUsers",
      I: ListUsersRequest,
      O: MultiUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update gdpr fields of current user.
     *
     * @generated from rpc clarifai.api.V2.PostUserConsent
     */
    postUserConsent: {
      name: "PostUserConsent",
      I: PostUserConsentRequest,
      O: SingleUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch information of current user or another user in the same organisation
     *
     * @generated from rpc clarifai.api.V2.PatchUser
     */
    patchUser: {
      name: "PatchUser",
      I: PatchUserRequest,
      O: SingleUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Post user access request
     *
     * @generated from rpc clarifai.api.V2.PostUserAccess
     */
    postUserAccess: {
      name: "PostUserAccess",
      I: PostUserAccessRequest,
      O: MultiUserAccessResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get user access request
     *
     * @generated from rpc clarifai.api.V2.GetUserAccess
     */
    getUserAccess: {
      name: "GetUserAccess",
      I: GetUserAccessRequest,
      O: SingleUserAccessResponse,
      kind: MethodKind.Unary,
    },
    /**
     * //////////////////////////////////////
     * Email
     * //////////////////////////////////////
     * Add Email
     *
     * @generated from rpc clarifai.api.V2.PostEmails
     */
    postEmails: {
      name: "PostEmails",
      I: PostEmailsRequest,
      O: MultipleEmailResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List emails
     *
     * @generated from rpc clarifai.api.V2.ListEmails
     */
    listEmails: {
      name: "ListEmails",
      I: ListEmailsRequest,
      O: MultipleEmailResponse,
      kind: MethodKind.Unary,
    },
    /**
     * For sending another verification email.
     *
     * @generated from rpc clarifai.api.V2.PostResendVerifyEmail
     */
    postResendVerifyEmail: {
      name: "PostResendVerifyEmail",
      I: PostResendVerifyRequest,
      O: SingleResendVerifyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Deleting an email.
     *
     * @generated from rpc clarifai.api.V2.DeleteEmail
     */
    deleteEmail: {
      name: "DeleteEmail",
      I: DeleteEmailRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create primate email.
     *
     * @generated from rpc clarifai.api.V2.PostPrimaryEmail
     */
    postPrimaryEmail: {
      name: "PostPrimaryEmail",
      I: PostPrimaryEmailRequest,
      O: SingleEmailResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Validate new password in real-time for a user
     *
     * @generated from rpc clarifai.api.V2.PostValidatePassword
     */
    postValidatePassword: {
      name: "PostValidatePassword",
      I: PostValidatePasswordRequest,
      O: SinglePasswordValidationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get global policy
     *
     * @generated from rpc clarifai.api.V2.ListGlobalPasswordPolicies
     */
    listGlobalPasswordPolicies: {
      name: "ListGlobalPasswordPolicies",
      I: ListGlobalPasswordPoliciesRequest,
      O: MultiplePasswordPoliciesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific set of password policies attached to a user.
     *
     * @generated from rpc clarifai.api.V2.ListPasswordPolicies
     */
    listPasswordPolicies: {
      name: "ListPasswordPolicies",
      I: ListPasswordPoliciesRequest,
      O: MultiplePasswordPoliciesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create a specific set of password policies attached to a user or an organization.
     *
     * @generated from rpc clarifai.api.V2.PostPasswordPolicies
     */
    postPasswordPolicies: {
      name: "PostPasswordPolicies",
      I: PostPasswordPoliciesRequest,
      O: MultiplePasswordPoliciesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update a specific set of password policies attached to a user or an organization.
     *
     * @generated from rpc clarifai.api.V2.PatchPasswordPolicies
     */
    patchPasswordPolicies: {
      name: "PatchPasswordPolicies",
      I: PatchPasswordPoliciesRequest,
      O: MultiplePasswordPoliciesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeletePasswordPolicies
     *
     * @generated from rpc clarifai.api.V2.DeletePasswordPolicies
     */
    deletePasswordPolicies: {
      name: "DeletePasswordPolicies",
      I: DeletePasswordPoliciesRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get user feature config
     *
     * @generated from rpc clarifai.api.V2.GetUserFeatureConfig
     */
    getUserFeatureConfig: {
      name: "GetUserFeatureConfig",
      I: UserFeatureConfigRequest,
      O: SingleUserFeatureConfigResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add organizations
     *
     * @generated from rpc clarifai.api.V2.PostOrganizations
     */
    postOrganizations: {
      name: "PostOrganizations",
      I: PostOrganizationsRequest,
      O: MultiOrganizationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List the provided user's organizations with their roles
     *
     * @generated from rpc clarifai.api.V2.ListUsersOrganizations
     */
    listUsersOrganizations: {
      name: "ListUsersOrganizations",
      I: ListUsersOrganizationsRequest,
      O: MultiUsersOrganizationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List multiple organizations
     *
     * @generated from rpc clarifai.api.V2.ListOrganizations
     */
    listOrganizations: {
      name: "ListOrganizations",
      I: ListOrganizationsRequest,
      O: MultiOrganizationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get single organization
     *
     * @generated from rpc clarifai.api.V2.GetOrganization
     */
    getOrganization: {
      name: "GetOrganization",
      I: GetOrganizationRequest,
      O: SingleOrganizationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch an organization
     *
     * @generated from rpc clarifai.api.V2.PatchOrganization
     */
    patchOrganization: {
      name: "PatchOrganization",
      I: PatchOrganizationRequest,
      O: SingleOrganizationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an organization
     *
     * @generated from rpc clarifai.api.V2.DeleteOrganization
     */
    deleteOrganization: {
      name: "DeleteOrganization",
      I: DeleteOrganizationRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List organization members
     *
     * @generated from rpc clarifai.api.V2.ListOrganizationMembers
     */
    listOrganizationMembers: {
      name: "ListOrganizationMembers",
      I: ListOrganizationMembersRequest,
      O: MultiOrganizationMemberResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListOrganizationAppMembers
     *
     * @generated from rpc clarifai.api.V2.ListOrganizationAppMembers
     */
    listOrganizationAppMembers: {
      name: "ListOrganizationAppMembers",
      I: ListOrganizationAppMembersRequest,
      O: MultiOrganizationMemberResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add new member to organization
     *
     * @generated from rpc clarifai.api.V2.PostOrganizationMember
     */
    postOrganizationMember: {
      name: "PostOrganizationMember",
      I: PostOrganizationMemberRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PatchOrganizationMember
     *
     * @generated from rpc clarifai.api.V2.PatchOrganizationMember
     */
    patchOrganizationMember: {
      name: "PatchOrganizationMember",
      I: PatchOrganizationMembersRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Remove a member from organization
     *
     * @generated from rpc clarifai.api.V2.DeleteOrganizationMember
     */
    deleteOrganizationMember: {
      name: "DeleteOrganizationMember",
      I: DeleteOrganizationMemberRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Organization invites
     *
     * @generated from rpc clarifai.api.V2.PostOrganizationInvitations
     */
    postOrganizationInvitations: {
      name: "PostOrganizationInvitations",
      I: PostOrganizationInvitationsRequest,
      O: MultiOrganizationInvitationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PatchOrganizationInvitations
     *
     * @generated from rpc clarifai.api.V2.PatchOrganizationInvitations
     */
    patchOrganizationInvitations: {
      name: "PatchOrganizationInvitations",
      I: PatchOrganizationInvitationsRequest,
      O: MultiOrganizationInvitationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListOrganizationInvitations
     *
     * @generated from rpc clarifai.api.V2.ListOrganizationInvitations
     */
    listOrganizationInvitations: {
      name: "ListOrganizationInvitations",
      I: ListOrganizationInvitationsRequest,
      O: MultiOrganizationInvitationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetOrganizationInvitation
     *
     * @generated from rpc clarifai.api.V2.GetOrganizationInvitation
     */
    getOrganizationInvitation: {
      name: "GetOrganizationInvitation",
      I: GetOrganizationInvitationRequest,
      O: SingleOrganizationInvitationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PostDeclineOrganizationInvitation
     *
     * @generated from rpc clarifai.api.V2.PostDeclineOrganizationInvitation
     */
    postDeclineOrganizationInvitation: {
      name: "PostDeclineOrganizationInvitation",
      I: PostDeclineOrganizationInvitationRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PostAcceptOrganizationInvitation
     *
     * @generated from rpc clarifai.api.V2.PostAcceptOrganizationInvitation
     */
    postAcceptOrganizationInvitation: {
      name: "PostAcceptOrganizationInvitation",
      I: PostAcceptOrganizationInvitationRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetOrganizationInvitationPublic
     *
     * @generated from rpc clarifai.api.V2.GetOrganizationInvitationPublic
     */
    getOrganizationInvitationPublic: {
      name: "GetOrganizationInvitationPublic",
      I: GetOrganizationInvitationPublicRequest,
      O: SingleOrganizationInvitationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Leave an organization
     *
     * @generated from rpc clarifai.api.V2.DeleteRequestingUserFromOrganization
     */
    deleteRequestingUserFromOrganization: {
      name: "DeleteRequestingUserFromOrganization",
      I: DeleteRequestingUserFromOrganizationRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add IdentityProviders
     *
     * @generated from rpc clarifai.api.V2.PostIdentityProviders
     */
    postIdentityProviders: {
      name: "PostIdentityProviders",
      I: PostIdentityProvidersRequest,
      O: MultiIdentityProviderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List multiple IdentityProviders
     *
     * @generated from rpc clarifai.api.V2.ListIdentityProviders
     */
    listIdentityProviders: {
      name: "ListIdentityProviders",
      I: ListIdentityProvidersRequest,
      O: MultiIdentityProviderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get single IdentityProvider
     *
     * @generated from rpc clarifai.api.V2.GetIdentityProvider
     */
    getIdentityProvider: {
      name: "GetIdentityProvider",
      I: GetIdentityProviderRequest,
      O: SingleIdentityProviderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch multiple IdentityProviders
     *
     * @generated from rpc clarifai.api.V2.PatchIdentityProviders
     */
    patchIdentityProviders: {
      name: "PatchIdentityProviders",
      I: PatchIdentityProvidersRequest,
      O: MultiIdentityProviderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete multiple IdentityProviders
     *
     * @generated from rpc clarifai.api.V2.DeleteIdentityProviders
     */
    deleteIdentityProviders: {
      name: "DeleteIdentityProviders",
      I: DeleteIdentityProvidersRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add teams
     *
     * @generated from rpc clarifai.api.V2.PostTeams
     */
    postTeams: {
      name: "PostTeams",
      I: PostTeamsRequest,
      O: MultiTeamResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List multiple teams
     *
     * @generated from rpc clarifai.api.V2.ListTeams
     */
    listTeams: {
      name: "ListTeams",
      I: ListTeamsRequest,
      O: MultiTeamResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get single team
     *
     * @generated from rpc clarifai.api.V2.GetTeam
     */
    getTeam: {
      name: "GetTeam",
      I: GetTeamRequest,
      O: SingleTeamResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch multiple teams
     *
     * @generated from rpc clarifai.api.V2.PatchTeams
     */
    patchTeams: {
      name: "PatchTeams",
      I: PatchTeamsRequest,
      O: MultiTeamResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete multiple teams
     *
     * @generated from rpc clarifai.api.V2.DeleteTeams
     */
    deleteTeams: {
      name: "DeleteTeams",
      I: DeleteTeamsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add users to a team
     *
     * @generated from rpc clarifai.api.V2.PostTeamUsers
     */
    postTeamUsers: {
      name: "PostTeamUsers",
      I: PostTeamUsersRequest,
      O: MultiTeamUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List team users
     *
     * @generated from rpc clarifai.api.V2.ListTeamUsers
     */
    listTeamUsers: {
      name: "ListTeamUsers",
      I: ListTeamUsersRequest,
      O: MultiTeamUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete users from a team
     *
     * @generated from rpc clarifai.api.V2.DeleteTeamUsers
     */
    deleteTeamUsers: {
      name: "DeleteTeamUsers",
      I: DeleteTeamUsersRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add applications to team
     *
     * @generated from rpc clarifai.api.V2.PostTeamApps
     */
    postTeamApps: {
      name: "PostTeamApps",
      I: PostTeamAppsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List team applications
     *
     * @generated from rpc clarifai.api.V2.ListTeamApps
     */
    listTeamApps: {
      name: "ListTeamApps",
      I: ListTeamAppsRequest,
      O: MultiTeamAppsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Remove applications from team
     *
     * @generated from rpc clarifai.api.V2.DeleteTeamApps
     */
    deleteTeamApps: {
      name: "DeleteTeamApps",
      I: DeleteTeamAppsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List multiple roles
     *
     * @generated from rpc clarifai.api.V2.ListRoles
     */
    listRoles: {
      name: "ListRoles",
      I: ListRolesRequest,
      O: MultiRoleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get single role
     *
     * @generated from rpc clarifai.api.V2.GetRole
     */
    getRole: {
      name: "GetRole",
      I: GetRoleRequest,
      O: SingleRoleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a saved legacy search.
     *
     * @generated from rpc clarifai.api.V2.GetSearch
     */
    getSearch: {
      name: "GetSearch",
      I: GetSearchRequest,
      O: SingleSearchResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all saved legacy searches.
     *
     * @generated from rpc clarifai.api.V2.ListSearches
     */
    listSearches: {
      name: "ListSearches",
      I: ListSearchesRequest,
      O: MultiSearchResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch saved legacy searches by ids.
     *
     * @generated from rpc clarifai.api.V2.PatchSearches
     */
    patchSearches: {
      name: "PatchSearches",
      I: PatchSearchesRequest,
      O: MultiSearchResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Execute a new search and optionally save it.
     *
     * @generated from rpc clarifai.api.V2.PostSearches
     */
    postSearches: {
      name: "PostSearches",
      I: PostSearchesRequest,
      O: MultiSearchResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Execute a previously saved legacy search.
     *
     * @generated from rpc clarifai.api.V2.PostSearchesByID
     */
    postSearchesByID: {
      name: "PostSearchesByID",
      I: PostSearchesByIDRequest,
      O: MultiSearchResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Evaluate the results of two search requests
     *
     * @generated from rpc clarifai.api.V2.PostAnnotationSearchMetrics
     */
    postAnnotationSearchMetrics: {
      name: "PostAnnotationSearchMetrics",
      I: PostAnnotationSearchMetricsRequest,
      O: MultiAnnotationSearchMetricsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get the evaluation results between two search requests
     *
     * @generated from rpc clarifai.api.V2.GetAnnotationSearchMetrics
     */
    getAnnotationSearchMetrics: {
      name: "GetAnnotationSearchMetrics",
      I: GetAnnotationSearchMetricsRequest,
      O: MultiAnnotationSearchMetricsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List the evaluation results between two search requests
     *
     * @generated from rpc clarifai.api.V2.ListAnnotationSearchMetrics
     */
    listAnnotationSearchMetrics: {
      name: "ListAnnotationSearchMetrics",
      I: ListAnnotationSearchMetricsRequest,
      O: MultiAnnotationSearchMetricsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteAnnotationSearchMetrics
     *
     * @generated from rpc clarifai.api.V2.DeleteAnnotationSearchMetrics
     */
    deleteAnnotationSearchMetrics: {
      name: "DeleteAnnotationSearchMetrics",
      I: DeleteAnnotationSearchMetricsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a saved search.
     *
     * @generated from rpc clarifai.api.V2.DeleteSearch
     */
    deleteSearch: {
      name: "DeleteSearch",
      I: DeleteSearchRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Execute an attribute search.
     *
     * @generated from rpc clarifai.api.V2.PostAttributeSearch
     */
    postAttributeSearch: {
      name: "PostAttributeSearch",
      I: PostAttributeSearchRequest,
      O: MultiSearchResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the annotation filters.
     *
     * @generated from rpc clarifai.api.V2.ListAnnotationFilters
     */
    listAnnotationFilters: {
      name: "ListAnnotationFilters",
      I: ListAnnotationFiltersRequest,
      O: MultiAnnotationFilterResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific annotation filter.
     *
     * @generated from rpc clarifai.api.V2.GetAnnotationFilter
     */
    getAnnotationFilter: {
      name: "GetAnnotationFilter",
      I: GetAnnotationFilterRequest,
      O: SingleAnnotationFilterResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add annotation filters.
     *
     * @generated from rpc clarifai.api.V2.PostAnnotationFilters
     */
    postAnnotationFilters: {
      name: "PostAnnotationFilters",
      I: PostAnnotationFiltersRequest,
      O: MultiAnnotationFilterResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more annotation filters.
     *
     * @generated from rpc clarifai.api.V2.PatchAnnotationFilters
     */
    patchAnnotationFilters: {
      name: "PatchAnnotationFilters",
      I: PatchAnnotationFiltersRequest,
      O: MultiAnnotationFilterResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete one or more annotation filters in a single request.
     *
     * @generated from rpc clarifai.api.V2.DeleteAnnotationFilters
     */
    deleteAnnotationFilters: {
      name: "DeleteAnnotationFilters",
      I: DeleteAnnotationFiltersRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a list of clusters in an app
     *
     * @generated from rpc clarifai.api.V2.ListClusters
     */
    listClusters: {
      name: "ListClusters",
      I: ListClustersRequest,
      O: MultiClusterResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the annotations for a given cluster.
     *
     * @generated from rpc clarifai.api.V2.ListAnnotationsForCluster
     */
    listAnnotationsForCluster: {
      name: "ListAnnotationsForCluster",
      I: ListAnnotationsForClusterRequest,
      O: MultiAnnotationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the annotations for a given cluser.
     *
     * @generated from rpc clarifai.api.V2.PostClustersSearches
     */
    postClustersSearches: {
      name: "PostClustersSearches",
      I: PostClustersSearchesRequest,
      O: MultiClusterResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify email
     *
     * @generated from rpc clarifai.api.V2.PostVerifyEmail
     */
    postVerifyEmail: {
      name: "PostVerifyEmail",
      I: PostVerifyEmailRequest,
      O: SingleVerifyEmailResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Request for password reset email
     *
     * @generated from rpc clarifai.api.V2.PostRequestResetPassword
     */
    postRequestResetPassword: {
      name: "PostRequestResetPassword",
      I: RequestResetPasswordRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Complete reset password
     *
     * @generated from rpc clarifai.api.V2.PostCompleteResetPassword
     */
    postCompleteResetPassword: {
      name: "PostCompleteResetPassword",
      I: CompleteResetPasswordRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Login with user/pass
     *
     * @generated from rpc clarifai.api.V2.PostLogin
     */
    postLogin: {
      name: "PostLogin",
      I: PostLoginRequest,
      O: SingleLoginResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Signup with account.
     *
     * @generated from rpc clarifai.api.V2.PostSignup
     */
    postSignup: {
      name: "PostSignup",
      I: PostSignupRequest,
      O: SingleLoginResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Logout use
     *
     * @generated from rpc clarifai.api.V2.PostLogout
     */
    postLogout: {
      name: "PostLogout",
      I: PostLogoutRequest,
      O: SingleLogoutResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List available authentication methods, e.g.
     * * standard auth method - login using user & password
     * * SAML auth methods - SSO using SAML Identity Providers like Okta, Github, Google GSuite, LinkedIn, etc.
     *
     * @generated from rpc clarifai.api.V2.ListAuthMethods
     */
    listAuthMethods: {
      name: "ListAuthMethods",
      I: ListAuthMethodsRequest,
      O: ListAuthMethodsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListOrgAuthMethods
     *
     * @generated from rpc clarifai.api.V2.ListOrgAuthMethods
     */
    listOrgAuthMethods: {
      name: "ListOrgAuthMethods",
      I: ListAuthMethodsRequest,
      O: ListAuthMethodsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListOrgAuthMethods
     *
     * @generated from rpc clarifai.api.V2.PostIdLoginFinalizer
     */
    postIdLoginFinalizer: {
      name: "PostIdLoginFinalizer",
      I: PostIdLoginFinalizerRequest,
      O: PostIdLoginFinalizerResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PostLinkIdpUser
     *
     * @generated from rpc clarifai.api.V2.PostLinkIdpUser
     */
    postLinkIdpUser: {
      name: "PostLinkIdpUser",
      I: PostLinkIdpUserRequest,
      O: PostLinkIdpUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetLoginInfo
     *
     * @generated from rpc clarifai.api.V2.GetLoginInfo
     */
    getLoginInfo: {
      name: "GetLoginInfo",
      I: GetLoginInfoRequest,
      O: GetLoginInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List available 2FA methods in current environment, e.g.
     * * TOTP auth method - login layer using time synced  codes
     *
     * @generated from rpc clarifai.api.V2.ListAuth2FAMethods
     */
    listAuth2FAMethods: {
      name: "ListAuth2FAMethods",
      I: List2FAMethodsRequest,
      O: List2FAMethodsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Enable Clarifai TOTP 2FA
     *
     * @generated from rpc clarifai.api.V2.PostAuth2FATotpRegisterEnable
     */
    postAuth2FATotpRegisterEnable: {
      name: "PostAuth2FATotpRegisterEnable",
      I: PostAuth2FATotpRegisterEnableRequest,
      O: PostAuth2FATotpRegisterEnableResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify Clarifai TOTP 2FA activation
     *
     * @generated from rpc clarifai.api.V2.PostAuth2FATotpRegisterVerify
     */
    postAuth2FATotpRegisterVerify: {
      name: "PostAuth2FATotpRegisterVerify",
      I: PostAuth2FATotpRegisterVerifyRequest,
      O: PostAuth2FATotpRegisterVerifyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Disable Clarifai TOTP 2FA
     *
     * @generated from rpc clarifai.api.V2.PostAuth2FATotpDisable
     */
    postAuth2FATotpDisable: {
      name: "PostAuth2FATotpDisable",
      I: PostAuth2FATotpDisableRequest,
      O: PostAuth2FATotpDisableResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Login with Clarifai TOTP 2FA activation
     *
     * @generated from rpc clarifai.api.V2.PostAuth2FATotpLogin
     */
    postAuth2FATotpLogin: {
      name: "PostAuth2FATotpLogin",
      I: PostAuth2FATotpLoginRequest,
      O: SingleLoginResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Recover users Clarifai TOTP 2FA activation through sending an email confirmation.
     *
     * @generated from rpc clarifai.api.V2.PostAuth2FATotpRecover
     */
    postAuth2FATotpRecover: {
      name: "PostAuth2FATotpRecover",
      I: PostAuth2FATotpRecoverRequest,
      O: PostAuth2FATotpRecoverResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Confirm the recovery of users Clarifai TOTP 2FA. Will be called by user from email link (via portal).
     *
     * @generated from rpc clarifai.api.V2.GetAuth2FATotpRecoverConfirm
     */
    getAuth2FATotpRecoverConfirm: {
      name: "GetAuth2FATotpRecoverConfirm",
      I: GetAuth2FATotpRecoverConfirmRequest,
      O: GetAuth2FATotpRecoverConfirmResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List the subscriptions.
     *
     * @generated from rpc clarifai.api.V2.GetSubscription
     */
    getSubscription: {
      name: "GetSubscription",
      I: GetSubscriptionRequest,
      O: SingleSubscriptionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a new subscription.
     *
     * @generated from rpc clarifai.api.V2.PostSubscription
     */
    postSubscription: {
      name: "PostSubscription",
      I: PostSubscriptionRequest,
      O: SingleSubscriptionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all credit cards.
     *
     * @generated from rpc clarifai.api.V2.ListCreditCards
     */
    listCreditCards: {
      name: "ListCreditCards",
      I: ListCreditCardsRequest,
      O: MultipleCreditCardResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a new credit card.
     *
     * @generated from rpc clarifai.api.V2.PostCreditCard
     */
    postCreditCard: {
      name: "PostCreditCard",
      I: PostCreditCardRequest,
      O: SingleCreditCardResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a credit card.
     *
     * @generated from rpc clarifai.api.V2.DeleteCreditCard
     */
    deleteCreditCard: {
      name: "DeleteCreditCard",
      I: DeleteCreditCardRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update a credit card.
     *
     * @generated from rpc clarifai.api.V2.PatchCreditCards
     */
    patchCreditCards: {
      name: "PatchCreditCards",
      I: PatchCreditCardsRequest,
      O: MultipleCreditCardResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get the shipping address.
     *
     * @generated from rpc clarifai.api.V2.GetShippingAddress
     */
    getShippingAddress: {
      name: "GetShippingAddress",
      I: GetShippingAddressRequest,
      O: SingleShippingAddressResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update shipping address.
     *
     * @generated from rpc clarifai.api.V2.PutShippingAddress
     */
    putShippingAddress: {
      name: "PutShippingAddress",
      I: PutShippingAddressRequest,
      O: SingleShippingAddressResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListPlans
     *
     * @generated from rpc clarifai.api.V2.ListPlans
     */
    listPlans: {
      name: "ListPlans",
      I: ListPlansRequest,
      O: MultiPlanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all status codes.
     *
     * @generated from rpc clarifai.api.V2.ListStatusCodes
     */
    listStatusCodes: {
      name: "ListStatusCodes",
      I: ListStatusCodesRequest,
      O: MultiStatusCodeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get more details for a status code.
     *
     * @generated from rpc clarifai.api.V2.GetStatusCode
     */
    getStatusCode: {
      name: "GetStatusCode",
      I: GetStatusCodeRequest,
      O: SingleStatusCodeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Health check endpoint
     *
     * @generated from rpc clarifai.api.V2.GetHealthz
     */
    getHealthz: {
      name: "GetHealthz",
      I: GetHealthzRequest,
      O: GetHealthzResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all billing  cycles - old billing
     *
     * @generated from rpc clarifai.api.V2.ListUserBillingCycles
     */
    listUserBillingCycles: {
      name: "ListUserBillingCycles",
      I: ListUserBillingCyclesRequest,
      O: ListUserBillingCyclesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List user usage.cycles.
     *
     * @generated from rpc clarifai.api.V2.ListUserCycles
     */
    listUserCycles: {
      name: "ListUserCycles",
      I: ListUserCyclesRequest,
      O: ListUserCyclesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the billing cycle start and end date as well as invoice items.
     *
     * @generated from rpc clarifai.api.V2.GetBillingUsage
     */
    getBillingUsage: {
      name: "GetBillingUsage",
      I: GetBillingUsageRequest,
      O: GetBillingUsageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add historical usage. - Billing 1
     *
     * @generated from rpc clarifai.api.V2.PostHistoricalUsage
     */
    postHistoricalUsage: {
      name: "PostHistoricalUsage",
      I: PostHistoricalUsageRequest,
      O: PostHistoricalUsageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get historical usage. - Billing 2
     *
     * @generated from rpc clarifai.api.V2.GetHistoricalUsage
     */
    getHistoricalUsage: {
      name: "GetHistoricalUsage",
      I: GetHistoricalUsageRequest,
      O: GetHistoricalUsageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a list of valid usage intervals
     *
     * @generated from rpc clarifai.api.V2.ListUsageIntervals
     */
    listUsageIntervals: {
      name: "ListUsageIntervals",
      I: ListUsageIntervalsRequest,
      O: ListUsageIntervalsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get realtime usage.
     *
     * @generated from rpc clarifai.api.V2.GetRealtimeUsage
     */
    getRealtimeUsage: {
      name: "GetRealtimeUsage",
      I: GetRealtimeUsageRequest,
      O: GetRealtimeUsageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Post usage to platform. Only called by on prem now.
     *
     * @generated from rpc clarifai.api.V2.PostUsage
     */
    postUsage: {
      name: "PostUsage",
      I: PostUsageRequest,
      O: PostUsageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * owner list users who the app is shared with
     *
     * @generated from rpc clarifai.api.V2.ListCollaborators
     */
    listCollaborators: {
      name: "ListCollaborators",
      I: ListCollaboratorsRequest,
      O: MultiCollaboratorsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * add collaborators to an app.
     *
     * @generated from rpc clarifai.api.V2.PostCollaborators
     */
    postCollaborators: {
      name: "PostCollaborators",
      I: PostCollaboratorsRequest,
      O: MultiCollaboratorsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch existing collaborators.
     *
     * @generated from rpc clarifai.api.V2.PatchCollaborators
     */
    patchCollaborators: {
      name: "PatchCollaborators",
      I: PatchCollaboratorsRequest,
      O: MultiCollaboratorsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete existing collaborators.
     *
     * @generated from rpc clarifai.api.V2.DeleteCollaborators
     */
    deleteCollaborators: {
      name: "DeleteCollaborators",
      I: DeleteCollaboratorsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Collaboration includes the app user are invitied to work on
     *
     * @generated from rpc clarifai.api.V2.ListCollaborations
     */
    listCollaborations: {
      name: "ListCollaborations",
      I: ListCollaborationsRequest,
      O: MultiCollaborationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get the license with crypto security.
     *
     * @generated from rpc clarifai.api.V2.FetchLicense
     */
    fetchLicense: {
      name: "FetchLicense",
      I: FetchLicenseRequest,
      O: FetchLicenseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all licenses.
     *
     * @generated from rpc clarifai.api.V2.ListLicenses
     */
    listLicenses: {
      name: "ListLicenses",
      I: ListLicensesRequest,
      O: MultipleLicensesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a license
     *
     * @generated from rpc clarifai.api.V2.GetLicense
     */
    getLicense: {
      name: "GetLicense",
      I: GetLicenseRequest,
      O: SingleLicenseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Check that a license is still valid.
     *
     * @generated from rpc clarifai.api.V2.ValidateLicense
     */
    validateLicense: {
      name: "ValidateLicense",
      I: ValidateLicenseRequest,
      O: ValidateLicenseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * start to duplicate an app which copies all the inputs, annotations, models, concepts etc. to a new app.
     * this is an async process, you should use ListAppDuplications or GetAppDuplication to check the status.
     *
     * @generated from rpc clarifai.api.V2.PostAppDuplications
     */
    postAppDuplications: {
      name: "PostAppDuplications",
      I: PostAppDuplicationsRequest,
      O: MultiAppDuplicationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * list all the app duplications user triggers
     *
     * @generated from rpc clarifai.api.V2.ListAppDuplications
     */
    listAppDuplications: {
      name: "ListAppDuplications",
      I: ListAppDuplicationsRequest,
      O: MultiAppDuplicationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * get the app duplication status
     *
     * @generated from rpc clarifai.api.V2.GetAppDuplication
     */
    getAppDuplication: {
      name: "GetAppDuplication",
      I: GetAppDuplicationRequest,
      O: SingleAppDuplicationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add tasks to an app.
     *
     * @generated from rpc clarifai.api.V2.PostTasks
     */
    postTasks: {
      name: "PostTasks",
      I: PostTasksRequest,
      O: MultiTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Task annotation count
     *
     * @generated from rpc clarifai.api.V2.GetTaskAnnotationCount
     */
    getTaskAnnotationCount: {
      name: "GetTaskAnnotationCount",
      I: GetTaskCountRequest,
      O: SingleTaskCountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Task Input count
     *
     * @generated from rpc clarifai.api.V2.GetTaskInputCount
     */
    getTaskInputCount: {
      name: "GetTaskInputCount",
      I: GetTaskCountRequest,
      O: SingleTaskCountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific task from an app.
     *
     * @generated from rpc clarifai.api.V2.GetTask
     */
    getTask: {
      name: "GetTask",
      I: GetTaskRequest,
      O: SingleTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List tasks from an app.
     *
     * @generated from rpc clarifai.api.V2.ListTasks
     */
    listTasks: {
      name: "ListTasks",
      I: ListTasksRequest,
      O: MultiTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more tasks.
     *
     * @generated from rpc clarifai.api.V2.PatchTasks
     */
    patchTasks: {
      name: "PatchTasks",
      I: PatchTasksRequest,
      O: MultiTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete multiple tasks in one request.
     *
     * @generated from rpc clarifai.api.V2.DeleteTasks
     */
    deleteTasks: {
      name: "DeleteTasks",
      I: DeleteTasksRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Rollup annotation count for task.
     *
     * @generated from rpc clarifai.api.V2.PatchAnnotationCountsRollup
     */
    patchAnnotationCountsRollup: {
      name: "PatchAnnotationCountsRollup",
      I: PatchAnnotationCountsRollupRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add Label orders.
     *
     * @generated from rpc clarifai.api.V2.PostLabelOrders
     */
    postLabelOrders: {
      name: "PostLabelOrders",
      I: PostLabelOrdersRequest,
      O: MultiLabelOrderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a label order.
     *
     * @generated from rpc clarifai.api.V2.GetLabelOrder
     */
    getLabelOrder: {
      name: "GetLabelOrder",
      I: GetLabelOrderRequest,
      O: SingleLabelOrderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List label orders.
     *
     * @generated from rpc clarifai.api.V2.ListLabelOrders
     */
    listLabelOrders: {
      name: "ListLabelOrders",
      I: ListLabelOrdersRequest,
      O: MultiLabelOrderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more label orders.
     *
     * @generated from rpc clarifai.api.V2.PatchLabelOrders
     */
    patchLabelOrders: {
      name: "PatchLabelOrders",
      I: PatchLabelOrdersRequest,
      O: MultiLabelOrderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete multiple label orders in one request.
     * this do not change task status
     *
     * @generated from rpc clarifai.api.V2.DeleteLabelOrders
     */
    deleteLabelOrders: {
      name: "DeleteLabelOrders",
      I: DeleteLabelOrdersRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a list of Collectors to an app.
     * In the handler of this endpoint we also check for all the scopes of the  POST /inputs
     * endpoint.
     * Those current scopes are listed here as a hard requirement.
     * They are needed when adding the collectors just so we now that you have permission with
     * that key at least to do the writing to this app with POST /inputs.
     *
     * @generated from rpc clarifai.api.V2.PostCollectors
     */
    postCollectors: {
      name: "PostCollectors",
      I: PostCollectorsRequest,
      O: MultiCollectorResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific collector from an app.
     *
     * @generated from rpc clarifai.api.V2.GetCollector
     */
    getCollector: {
      name: "GetCollector",
      I: GetCollectorRequest,
      O: SingleCollectorResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the collectors.
     *
     * @generated from rpc clarifai.api.V2.ListCollectors
     */
    listCollectors: {
      name: "ListCollectors",
      I: ListCollectorsRequest,
      O: MultiCollectorResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more collectors.
     *
     * @generated from rpc clarifai.api.V2.PatchCollectors
     */
    patchCollectors: {
      name: "PatchCollectors",
      I: PatchCollectorsRequest,
      O: MultiCollectorResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete multiple collectors in one request.
     * This call is asynchronous. Use DeleteCollector if you want a synchronous version.
     *
     * @generated from rpc clarifai.api.V2.DeleteCollectors
     */
    deleteCollectors: {
      name: "DeleteCollectors",
      I: DeleteCollectorsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PostStatValues
     *
     * @generated from rpc clarifai.api.V2.PostStatValues
     */
    postStatValues: {
      name: "PostStatValues",
      I: PostStatValuesRequest,
      O: MultiStatValueResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PostStatValuesAggregate
     *
     * @generated from rpc clarifai.api.V2.PostStatValuesAggregate
     */
    postStatValuesAggregate: {
      name: "PostStatValuesAggregate",
      I: PostStatValuesAggregateRequest,
      O: MultiStatValueAggregateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a new analytics entry into our database
     *
     * @generated from rpc clarifai.api.V2.PostAnalytics
     */
    postAnalytics: {
      name: "PostAnalytics",
      I: PostAnalyticsRequest,
      O: PostAnalyticsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a new sdk_billing entry into our database
     *
     * @generated from rpc clarifai.api.V2.PostSDKBilling
     */
    postSDKBilling: {
      name: "PostSDKBilling",
      I: PostSDKBillingRequest,
      O: PostSDKBillingResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Find annotations duplicates based on an specified attribute of different annotations
     *
     * @generated from rpc clarifai.api.V2.PostFindDuplicateAnnotationsJobs
     */
    postFindDuplicateAnnotationsJobs: {
      name: "PostFindDuplicateAnnotationsJobs",
      I: PostFindDuplicateAnnotationsJobsRequest,
      O: MultiFindDuplicateAnnotationsJobResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get annotations find duplicates jobs results by id
     *
     * @generated from rpc clarifai.api.V2.GetFindDuplicateAnnotationsJobs
     */
    getFindDuplicateAnnotationsJobs: {
      name: "GetFindDuplicateAnnotationsJobs",
      I: GetFindDuplicateAnnotationsJobsRequest,
      O: MultiFindDuplicateAnnotationsJobResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the annotations find duplicates jobs results
     *
     * @generated from rpc clarifai.api.V2.ListFindDuplicateAnnotationsJobs
     */
    listFindDuplicateAnnotationsJobs: {
      name: "ListFindDuplicateAnnotationsJobs",
      I: ListFindDuplicateAnnotationsJobsRequest,
      O: MultiFindDuplicateAnnotationsJobResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteFindDuplicateAnnotationsJobs
     *
     * @generated from rpc clarifai.api.V2.DeleteFindDuplicateAnnotationsJobs
     */
    deleteFindDuplicateAnnotationsJobs: {
      name: "DeleteFindDuplicateAnnotationsJobs",
      I: DeleteFindDuplicateAnnotationsJobsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Increase the view metric for a detail view
     *
     * @generated from rpc clarifai.api.V2.PostTrendingMetricsView
     */
    postTrendingMetricsView: {
      name: "PostTrendingMetricsView",
      I: PostTrendingMetricsViewRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List the view metrics for a detail view
     *
     * @generated from rpc clarifai.api.V2.ListTrendingMetricsViews
     */
    listTrendingMetricsViews: {
      name: "ListTrendingMetricsViews",
      I: ListTrendingMetricsViewsRequest,
      O: MultiTrendingMetricsViewResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Validates the ids (app and user supported), returns validation errors and recommendations
     *
     * @generated from rpc clarifai.api.V2.PostIdValidation
     */
    postIdValidation: {
      name: "PostIdValidation",
      I: PostIdValidationRequest,
      O: MultiIdValidationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the available tags for specified object_type grouped by category
     *
     * @generated from rpc clarifai.api.V2.ListTagCategories
     */
    listTagCategories: {
      name: "ListTagCategories",
      I: ListTagCategoriesRequest,
      O: MultiTagCategoryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List users web notifications
     *
     * @generated from rpc clarifai.api.V2.ListWebNotifications
     */
    listWebNotifications: {
      name: "ListWebNotifications",
      I: ListWebNotificationsRequest,
      O: MultiWebNotificationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a web notification
     *
     * @generated from rpc clarifai.api.V2.GetWebNotification
     */
    getWebNotification: {
      name: "GetWebNotification",
      I: GetWebNotificationRequest,
      O: SingleWebNotificationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update users web notifications
     *
     * @generated from rpc clarifai.api.V2.PatchWebNotifications
     */
    patchWebNotifications: {
      name: "PatchWebNotifications",
      I: PatchWebNotificationsRequest,
      O: MultiWebNotificationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete users web notifications
     *
     * @generated from rpc clarifai.api.V2.DeleteWebNotifications
     */
    deleteWebNotifications: {
      name: "DeleteWebNotifications",
      I: DeleteWebNotificationsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific module from an app.
     *
     * @generated from rpc clarifai.api.V2.GetModule
     */
    getModule: {
      name: "GetModule",
      I: GetModuleRequest,
      O: SingleModuleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the modules in community, by user or by app.
     *
     * @generated from rpc clarifai.api.V2.ListModules
     */
    listModules: {
      name: "ListModules",
      I: ListModulesRequest,
      O: MultiModuleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a modules to an app.
     *
     * @generated from rpc clarifai.api.V2.PostModules
     */
    postModules: {
      name: "PostModules",
      I: PostModulesRequest,
      O: MultiModuleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Patch one or more modules.
     *
     * @generated from rpc clarifai.api.V2.PatchModules
     */
    patchModules: {
      name: "PatchModules",
      I: PatchModulesRequest,
      O: MultiModuleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete multiple modules in one request.
     *
     * @generated from rpc clarifai.api.V2.DeleteModules
     */
    deleteModules: {
      name: "DeleteModules",
      I: DeleteModulesRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific module version for a module.
     *
     * @generated from rpc clarifai.api.V2.GetModuleVersion
     */
    getModuleVersion: {
      name: "GetModuleVersion",
      I: GetModuleVersionRequest,
      O: SingleModuleVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the modules versions for a given module.
     *
     * @generated from rpc clarifai.api.V2.ListModuleVersions
     */
    listModuleVersions: {
      name: "ListModuleVersions",
      I: ListModuleVersionsRequest,
      O: MultiModuleVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create a new module version to trigger training of the module.
     *
     * @generated from rpc clarifai.api.V2.PostModuleVersions
     */
    postModuleVersions: {
      name: "PostModuleVersions",
      I: PostModuleVersionsRequest,
      O: MultiModuleVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a multiple module version.
     *
     * @generated from rpc clarifai.api.V2.DeleteModuleVersions
     */
    deleteModuleVersions: {
      name: "DeleteModuleVersions",
      I: DeleteModuleVersionsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get installed modules vesrions for an app.
     *
     * @generated from rpc clarifai.api.V2.GetInstalledModuleVersion
     */
    getInstalledModuleVersion: {
      name: "GetInstalledModuleVersion",
      I: GetInstalledModuleVersionRequest,
      O: SingleInstalledModuleVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List installed modules vesrions for an app.
     *
     * @generated from rpc clarifai.api.V2.ListInstalledModuleVersions
     */
    listInstalledModuleVersions: {
      name: "ListInstalledModuleVersions",
      I: ListInstalledModuleVersionsRequest,
      O: MultiInstalledModuleVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Install a new module version which will deploy the specific ModuleVersion to the app in the url.
     *
     * @generated from rpc clarifai.api.V2.PostInstalledModuleVersions
     */
    postInstalledModuleVersions: {
      name: "PostInstalledModuleVersions",
      I: PostInstalledModuleVersionsRequest,
      O: MultiInstalledModuleVersionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Uninstall an installed module version which will deploy the specific ModuleVersion to the app
     * in the url.
     * This cleaned up any associated caller keys so needs the Keys_Delete scope.
     *
     * @generated from rpc clarifai.api.V2.DeleteInstalledModuleVersions
     */
    deleteInstalledModuleVersions: {
      name: "DeleteInstalledModuleVersions",
      I: DeleteInstalledModuleVersionsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Assign a key that the caller owns to be used when accessing this installed module version
     * If this endpoint is called with a different key then it overwrites what is there.
     *
     * @generated from rpc clarifai.api.V2.PostInstalledModuleVersionsKey
     */
    postInstalledModuleVersionsKey: {
      name: "PostInstalledModuleVersionsKey",
      I: PostInstalledModuleVersionsKeyRequest,
      O: SingleKeyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Perform bulk operations on a list of inputs based on input source.
     * Operation include add, update, delete of concepts, metadata and geo data.
     * This is an Asynchronous process. Use ListBulkOperations or GetBulkOperation to check the status.
     *
     * @generated from rpc clarifai.api.V2.PostBulkOperations
     */
    postBulkOperations: {
      name: "PostBulkOperations",
      I: PostBulkOperationsRequest,
      O: MultiBulkOperationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the bulk operations
     *
     * @generated from rpc clarifai.api.V2.ListBulkOperations
     */
    listBulkOperations: {
      name: "ListBulkOperations",
      I: ListBulkOperationsRequest,
      O: MultiBulkOperationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get the bulk operation details by ID
     *
     * @generated from rpc clarifai.api.V2.GetBulkOperation
     */
    getBulkOperation: {
      name: "GetBulkOperation",
      I: GetBulkOperationRequest,
      O: SingleBulkOperationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Cancel one or more bulk operations
     *
     * @generated from rpc clarifai.api.V2.CancelBulkOperations
     */
    cancelBulkOperations: {
      name: "CancelBulkOperations",
      I: CancelBulkOperationRequest,
      O: MultiBulkOperationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * delete one or more terminated bulk operations
     *
     * @generated from rpc clarifai.api.V2.DeleteBulkOperations
     */
    deleteBulkOperations: {
      name: "DeleteBulkOperations",
      I: DeleteBulkOperationRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific job.
     *
     * @generated from rpc clarifai.api.V2.GetDatasetInputsSearchAddJob
     */
    getDatasetInputsSearchAddJob: {
      name: "GetDatasetInputsSearchAddJob",
      I: GetDatasetInputsSearchAddJobRequest,
      O: SingleDatasetInputsSearchAddJobResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List next non-labeled and unassigned inputs from task's dataset
     *
     * @generated from rpc clarifai.api.V2.ListNextTaskAssignments
     */
    listNextTaskAssignments: {
      name: "ListNextTaskAssignments",
      I: ListNextTaskAssignmentsRequest,
      O: MultiInputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PutTaskAssignments evaluates all the annotations by labeler (authenticated user) for given task (task_id) and input (input_id).
     *
     * @generated from rpc clarifai.api.V2.PutTaskAssignments
     */
    putTaskAssignments: {
      name: "PutTaskAssignments",
      I: PutTaskAssignmentsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PostWaitlistEmails adds new e-mail addresses to a feature waiting list.
     *
     * @generated from rpc clarifai.api.V2.PostWaitlistEmails
     */
    postWaitlistEmails: {
      name: "PostWaitlistEmails",
      I: PostWaitlistEmailsRequest,
      O: MultiWaitlistEmailResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetSampledPredictResults get sampled prediction metrics by model id
     *
     * @generated from rpc clarifai.api.V2.GetSampledPredictMetrics
     */
    getSampledPredictMetrics: {
      name: "GetSampledPredictMetrics",
      I: GetSampledPredictMetricsRequest,
      O: MultiSampledPredictMetricsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create a job to add inputs from a cloud storage to an app on the clarifai platform
     * This is an Asynchronous process. Use ListInputsAddJobs or GetInputsJob to check the status.
     *
     * @generated from rpc clarifai.api.V2.PostInputsAddJobs
     */
    postInputsAddJobs: {
      name: "PostInputsAddJobs",
      I: PostInputsAddJobsRequest,
      O: MultiInputsAddJobsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List all the inputs add jobs
     *
     * @generated from rpc clarifai.api.V2.ListInputsAddJobs
     */
    listInputsAddJobs: {
      name: "ListInputsAddJobs",
      I: ListInputsAddJobsRequest,
      O: MultiInputsAddJobsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get the input add job details by ID
     *
     * @generated from rpc clarifai.api.V2.GetInputsAddJob
     */
    getInputsAddJob: {
      name: "GetInputsAddJob",
      I: GetInputsAddJobRequest,
      O: SingleInputsAddJobResponse,
      kind: MethodKind.Unary,
    },
    /**
     * cancel the input add job by ID
     *
     * @generated from rpc clarifai.api.V2.CancelInputsAddJob
     */
    cancelInputsAddJob: {
      name: "CancelInputsAddJob",
      I: CancelInputsAddJobRequest,
      O: SingleInputsAddJobResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc clarifai.api.V2.PostUploads
     */
    postUploads: {
      name: "PostUploads",
      I: PostUploadsRequest,
      O: MultiUploadResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc clarifai.api.V2.PutUploadContentParts
     */
    putUploadContentParts: {
      name: "PutUploadContentParts",
      I: PutUploadContentPartsRequest,
      O: SingleUploadResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc clarifai.api.V2.GetUpload
     */
    getUpload: {
      name: "GetUpload",
      I: GetUploadRequest,
      O: SingleUploadResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc clarifai.api.V2.ListUploads
     */
    listUploads: {
      name: "ListUploads",
      I: ListUploadsRequest,
      O: MultiUploadResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc clarifai.api.V2.DeleteUploads
     */
    deleteUploads: {
      name: "DeleteUploads",
      I: DeleteUploadsRequest,
      O: BaseResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

